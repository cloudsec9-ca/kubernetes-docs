
URL reference: https://krolcloud.com/blog/anonymous-authentication-in-kubernetes/
DateReviewed: 2023-07-01
Description: The article explores a bit on what anonymous users mean in Kubernetes. It seems every access to the Kubernetes API requires a user, and if you don't supply one, it uses the "anonymous" one. Things like health and version are exposed by default. So if you don't want to expose this, the article asks -- how do you turn it off? They explain where this is set, and explain it might have implications in some cases. We pause to talk a bit about RBAC, and how the role a user slots into impacts what it can do. So, what if you want to give the anonymous user MORE access? They walk through adding the perms, and show before/after calls to the API. They then use a few tools to detect such happenings, and show which tools surface the info.
BottomLine: A good mid-level exploration of Kubernetes explaining the anonymous user permissions
==
URL reference: https://cloudsecurityalliance.org/blog/2023/06/29/mastering-kubernetes-security-navigating-complexity-and-securing-your-cloud-native-architecture/
DateReviewed: 2023-07-02
Description: This blog starts by hyping Kubernetes unique challenges and promising to provide insights; let's dig in. Using a 2 yr old report, we're touted that uptake is high, with 96% of orgs using it -- but the survey is of CNCF orgs, who are Cloud adjacent. So, I'd say this is creative stats. The article argues that security teams should be taking point, and they have to understand Kuberenetes. They then start to go through those challenges, first by talking about ephemeral workloads. This means short-lived containers, and is a depature from earlier tech, and requires more pro-active approaches. Next up is default configs, which can expose permissions to services and users. They give a good recommendation here, with a link to a benchmark. Another technique is enforced policies, to ensure compliance to security at all the lifecycle stages. Finally, they recommend a proactive security approach, of which K8s is just one part. Overall, the blog is helpful but feels like it lacks a bit in impact.
BottomLine: Okay overview but there are better high-level overviews out there.
==
URL reference: https://itnext.io/performing-security-checks-for-deployed-kubernetes-manifests-fa9d442b7951
DateReviewed: 2023-07-03
Description: Short motivation on what can happen if you have a vulnerable pod, and quick background on one way to prevent it. The article does mention there are other tools, but explains why this one is a good choice. The author walks us through the install of the tool (Polaris). He then takes us through the result, which is a pretty display, showing a donut chart of what is good and what is an issue in your cluster. They then dive into a result, showing the issue raised and even how they resolved it. Now the author promotes two adjacent articles, covering CI/CD and Github, to do this as part of your build pipeline, which is fair. 
BottomLine: A quick intro to Kubernetes security, but getting dirty with a specific tool
==
URL reference: https://blog.aquasec.com/introducing-kbom-kubernetes-bill-of-materials
DateReviewed: 2023-07-04
Description: Starts with a bit of motivation about SBOM and what KBOM means and how it differs. So while SBOM is app focused, KBOM tries to bring visibility to your various configs around your cluster. They then travel through a Q&A on a number of questions, including if they are touting a product of theirs -- sort of -- one does and one doesn't do the KBOM. It's an interesting concept.
BottomLine: Introduces KBOM for Kubernetes and explains how it differs from SBOMs
==
URL reference: https://itnext.io/cilium-cni-a-comprehensive-deep-dive-guide-for-networking-and-security-enthusiasts-588afbf72d5c
DateReviewed: 2023-07-05
Description: Article starts strong by explaining the network focus of Cilium, which is a Container Network Interface (CNI). They explain how Cilium can be used to do Ingress. As well, it exposes the Kubernetes Gateway API, which allows implementors like Cilium to expose external services. Bonus: a good amount of diagrams spinkled in. The author goes through what Cilium can do through the API, including Load balancing. It also supports SNI, which allows multiple names to be served on a single IP. There is a bit dedicated to service mesh with Cilium as well. I'd say this is a great overview and motivation to try Cilium!
BottomLine: Good broad introduction to Cilium and how it can work in Kubernetes
==
URL reference: https://dev.to/ciscoemerge/building-secure-docker-images-for-production-best-practices-5d0f
DateReviewed: 2023-07-06
Description: Our focus in this article is practial security enhancements to our production Docker images. We start by digging into a paticular project, with an image file. We are then treated to a discussion on the differences between production and dev enviroments. To satisfy these varied requirements, we use a different image for dev and prod -- the multi-stage build. They incorporate a scanner to review images we might use in prod for security. Next, they tune the dockerfile, and show how the cache can speed up your build. We also see how to create a user and add a healthcheck, to ensure our app runs properly. They then build and do another scan, to make sure everything is secure. A pretty nice walkthrough.
BottomLine: Good walkthrough of steps to do some practical basic security on your Docker builds
==
