
URL reference: https://krolcloud.com/blog/anonymous-authentication-in-kubernetes/
DateReviewed: 2023-07-01
Description: The article explores a bit on what anonymous users mean in Kubernetes. It seems every access to the Kubernetes API requires a user, and if you don't supply one, it uses the "anonymous" one. Things like health and version are exposed by default. So if you don't want to expose this, the article asks -- how do you turn it off? They explain where this is set, and explain it might have implications in some cases. We pause to talk a bit about RBAC, and how the role a user slots into impacts what it can do. So, what if you want to give the anonymous user MORE access? They walk through adding the perms, and show before/after calls to the API. They then use a few tools to detect such happenings, and show which tools surface the info.
BottomLine: A good mid-level exploration of Kubernetes explaining the anonymous user permissions
==
URL reference: https://cloudsecurityalliance.org/blog/2023/06/29/mastering-kubernetes-security-navigating-complexity-and-securing-your-cloud-native-architecture/
DateReviewed: 2023-07-02
Description: This blog starts by hyping Kubernetes unique challenges and promising to provide insights; let's dig in. Using a 2 yr old report, we're touted that uptake is high, with 96% of orgs using it -- but the survey is of CNCF orgs, who are Cloud adjacent. So, I'd say this is creative stats. The article argues that security teams should be taking point, and they have to understand Kuberenetes. They then start to go through those challenges, first by talking about ephemeral workloads. This means short-lived containers, and is a depature from earlier tech, and requires more pro-active approaches. Next up is default configs, which can expose permissions to services and users. They give a good recommendation here, with a link to a benchmark. Another technique is enforced policies, to ensure compliance to security at all the lifecycle stages. Finally, they recommend a proactive security approach, of which K8s is just one part. Overall, the blog is helpful but feels like it lacks a bit in impact.
BottomLine: Okay overview but there are better high-level overviews out there.
==
