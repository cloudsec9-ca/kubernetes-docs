
URL reference: https://www.admin-magazine.com/Archive/2024/81/Securing-the-container-environment
DateReviewed: 2024-10-01
Description: Our article tackles Kubernetes security, but it does it from a more offensive approach - how do attackers gain access? After a bit of background, we jump into a section called main entry points, and they dedicate some space to attacks that target K8s. We start with app vulns and follow up with server-side request forgery, which gets a good walking through. They cover RBAC and misconfigs, as well as insecure APIs before finishing up with container breakouts. They cover each with at least one para, but some of the more interesting they go 3 or more into. Next up is a section called escaping to the host, where you gain access to the container host from inside the container. They have a laundry list of Docker to Linux capabilities, some of which can enable breakouts. They do go through how to get a reverse shell, with listings and some CLI commands. I think this is interesting myself, and I think the article demonstrates how attackers think and where you might need to think differently.
BottomLine: Decent attack-based approach to Kubernetes security.
==
URL reference: https://medium.com/@andreacere/kubernetes-security-best-practices-for-protecting-your-containerized-applications-e74c8937c693
DateReviewed: 2024-10-01
Description: We start with Kubernetes awesome, except security. This article has a laundry list approach, and they dive right in. They start with figuring out what issues K8s has, which they enumerate. The rest of their list is in order - RBAC, harden API server, harden cluster nodes, use PSP, use network fabric, log and monitor, supply chain (secure images), backup and finally stay aware of what is going on. Each list entry gets a one sentence definition, then a number of best practices in point form. Not a groundbreaker, but a decent intro to K8s security.
BottomLine: Decent intro to Kubernetes security
==
URL reference: https://www.cncf.io/blog/2024/08/29/kubernetes-v1-31-elli-an-insider-view/
DateReviewed: 2024-10-02
Description: This is an account of how Kubernetes is readied for new versions. We start with a bit of background, and how he got into the K8s distro pipeline. He then talks about shadowing, and what he was actually doing in this. He was a comms shadow, which he thought aligned with his DevRel role. He explains it is about a 14 week process, with 35-40 volunteers working with dev teams to get a release rolled out. He explains how things are organized into SIGs, and how they guide the process from teams and through building until it is officially released. They mention some highlights from this release, as well as what is coming up in the next release. They also go through a short checklist of the things that need to be done before the release, so things are ready once the code is all good. They have a few notes on things like talks and interviews that are either coming up or recently done. Overall an interesting piece.
BottomLine: Kubernetes release team participant talks about what they do
==
URL reference: https://www.meshiq.com/kafka-on-kubernetes-integration-strategies-and-best-practices/
DateReviewed: 2024-10-03
Description: This article dives into running Kafka on Kubernetes. We dive in and they note that Kafka, which is distributed and needs scaling flexibility, is a good match for K8s. We then talk about specific configs, like StatefulSets for Kafka brokers and using PV and PVCs to manage storare. They also talk about deploying with Helm to simplify stuff. Next up are best practices, where they touch on resource management, logging, network config and security. They advise to test failover and to optimize for stability. Overall decent coverage of an interesting topic.
BottomLine: Good intro to using Kafka deployed on a Kubernetes cluster
==
