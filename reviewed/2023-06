URL reference: https://www.cncf.io/blog/2023/05/31/the-cost-of-ignoring-security-champions-a-cautionary-tale-for-application-security-culture/
DateReviewed: 2023-06-02
Description: This article explains what a security champion is, why they are needed, and what happens when they aren't there. Champions act as the catalyst between tech people (devs but also other IT) and the formal security org. I like the approach and advocacy of tackling security early and being thorough.
BottomLine: Good piece arguing for using Security Champions
==
URL reference: https://cloudsecdocs.com/container_security/theory/secure_components/pod_security_standards/
DateReviewed: 2023-06-03
Description: A quick guide for those switching from PodSecurityPolicy. Goes through how to set the new Pod Security Standards up, how the policies are defined, and how they are enforced. It wraps up with a quick example of the YAML needed to use them.
BottomLine: Good quick reference and intro to Pod Security Standard
==
URL reference: https://blog.cloudsecque.com/how-to-improve-the-security-of-your-applications-with-kubernetes-security-scanners-cda97fd2f574
DateReviewed: 2023-06-04
Description: We start off being told the case for why we want a scanner and how it helps, which is a good foundation. It then goes through things like needed permissions, supported configs and even touches on prices, including free options. We then dig into 5 scanners, talking about what they target and a high level on how they work. Overall, decent, but I wish they'd have touched on the weakness of scanning (a scan today won't find a zero-day discovered next week -- you'll have to wait until your next deployment/update to pick that up.
BottomLine: Good motivation on Kubernetes security scanners and a touch on a hnadful of such tools
==
URL reference: https://blog.codeswiftr.com/kubernetes-in-azure-a-step-by-step-guide-to-setting-up-a-production-ready-cluster-7336f78d5f7
DateReviewed: 2023-06-05
Description: Starts with a good groundwork, explaining why you want Kubernetes and how Azure factors into the equation here. They have a list of prereqs and do a handwave at how to get one of them. They use Terraform as their IaC tool, so the explain the gameplan on how to get the cluster running. First up is creating some storage which will keep track of our TF state. They then set up things like cloud networks and other plumbing, which we need to actually have traffic flow. Next up is logging, done through Log Analytics. We need a way to talk to the cluster from outside, and for that they set up an Application Gateway Ingress Controller and finally they spin up Kubernetes itself. They then show using kubectl to actually talk to the cluster.
BottomLine: A complete walkthrough of setting up Kubernetes on Azure
==
URL reference: https://securityonline.info/kubeshark-api-traffic-analyzer-for-kubernetes/
DateReviewed: 2023-06-06
Description: We start with a brief background on kubeshark, which is an API traffic analyster for Kubernetes. They have a colorful but small screenshot. Kubeshark seems like wireshark, using eBPF to grab all kinds of possible traffic. And it does integration too, it seems. The article lacks use cases -- is it a debugging tool, or should I use it to monitor -- maybe both? The approach is VERY high level, but then they smack an "install & use" link.
BottomLine: The tool seems interesting, but the article is a bit lightweight
==
URL reference: https://securityboulevard.com/2022/10/zero-trust-the-service-mesh-and-linkerd/
DateReviewed: 2023-06-07
Description: Ah, an article on Zero Trust -- let's dig in. We start talking about buzzwords and marketing, and then go through a decent definition of zero trust. Main gist is this is a pivot from perimeter security which we are familiar with on-prem, where there is a boundary and the inside is trusted. They then explain how perimeter security breaks down in the cloud. They introduce three concepts - Identity, Policy, and Enforcement, and explains how each works and why we need them with details. We're now taken through how this can work in Kubernetes, mainly leaning on Linkerd, but with high-level explainations of how things flow. It talks about side cars, mTLS, and automated checks to ensure containers are only talkling to who they need to.
BottomLine: Good, practical walk through of Zero trust, including a high level glance at doing it on Kubernetes, but still beginner friendly
==
URL reference: https://www.civo.com/blog/cilium-introduction
DateReviewed: 2023-06-08
Description: This article is a high-level walkthrough of Cilium, which explains what it is, and how it works -- and what it is useful for. Cilium uses eBPF under the covers, to do the work, which in most cases is slicing and dicing network traffic. The article explains that Cilium can either augment or in some cases replace pieces of the standard Kubernetes stack, to allow maximum flexibility. It claims to do proxy and load balancing, and even service load balancing. It also talks a bit about Cilium's security features. It spends a bunch of paragraphs talking about the piece they use for the UI, which they call Hubble. Hubble is integrated in, and allows you visibility into what Cilium is doing and thus into  your network. Overall a decent but high level walkthrough.
BottomLine: A great high level into to Cilium, which can help manage Kubernetes Nettwoking
==
URL reference: https://www.tigera.io/blog/using-calico-egress-gateway-and-access-controls-to-secure-traffic/
DateReviewed: 2023-06-08
Description: Unlike much security focused on inbound issues, this post focuses on traffic leaving the cluster, or Egress. The first issue they surface is that cluster IPs are ephemeral, and might even be NATed, and this can mean having to open up more firewall space than usual. In paticular, while one pod might require access to an external DB, because the outbound IP is the node, any other pod on that node will have access. The solution, using Calico, is to set up an egress gateway, which will only allow the correct pod to use it. The article goes on to talk about a few configs, including different namespaces and load balancing to account for different use cases. A good look at an interesting security approach.
BottomLine: Good examination of the Calico tool used to restrict egress traffic from a Kubernetes cluster
==
URL reference: https://www.itprotoday.com/hybrid-cloud-and-multicloud/it-pros-lack-time-support-learn-vital-cloud-computing-skills
DateReviewed: 2023-06-09
Description: This article is trying to reflect where IT is as an industry with Cloud understanding. They cite a study that says about two-thirds of techs are still at beginning stage in cloud understanding.
BottomLine: Reflection of where IT techs are in terms of cloud understanding
==
URL reference: https://medium.com/@codingkarma/kubernetes-goat-part-1-8718b1345a42
DateReviewed: 2023-06-10
Description: This is a first person walkthrough, using Kubernetes Goat. The Goat is an intentionally weak deployment, to learn how to find and fix security issues with your Kubernetes install. In this post, the author focuses on one aspect, basically tracking it all the way through and solving it. There is a promise at the end of further episodes, and this toe-dip has me interested in trying to spin up a version of Goat.
BottomLine: Good low level walkthrough of learning Kubernetes security practices with Goat
==
URL reference: https://techcommunity.microsoft.com/t5/apps-on-azure-blog/releasing-kubernetes-apps-offer-in-microsoft-cloud-marketplace/ba-p/3650628
DateReviewed: 2023-06-11
Description: While an interesting bit of info, this is the most awkwardly laid out blog/article. I thought it was a one paragraph blurb on the monitezation offering, but it turns out they have a linked video demo and do a bit of a screenshoted walkthrough. It's neat, I just wish it was done a bit better.
BottomLine: Interesting Kubernetes SaaS monetiztion but awkward article
==
URL reference: https://blog.frankel.ch/learning-auditing-kubernetes-manifests/
DateReviewed: 2023-06-12
Description: This is an actual-run walkthrough of a tool called Checkov, which helps you find IaC issues before deploying into Kubernetes. I like his approach -- he runs the tool, digs through the output, explains the issue and whether his thread model needs a fix applied. He has notes and pointers to other resources at the end.
BottomLine: Good low level interaction with Checkov to demonstrate how to use and mitigate IaC issues before deployment
==
URL reference: https://www.aquasec.com/cloud-native-academy/kubernetes-101/kubernetes-complete-guide/
DateReviewed: 2023-06-13
Description: This is a broad but high level introduction to everything that is Kubernetes. It starts with what is Kubernetes, and talks about the components and overview of how different parts fit together. In a paragraph or two, it goes through things like etcd and kubectl, so you know what their functions are. It then talks about cloud managed K8s and various distros, so you know what the options are. It talks about alternatives, and then finishes up by talking about things like security and using Kubernetes in production. It's a good wide-ranging intro.
BottomLine: Broad, high level intro which touches all of the bits and allows someone with no background to hit the ground running.
==
URL reference: https://blog.getambassador.io/kubernetes-canary-testing-and-release-with-istio-4cbdedcc9914
DateReviewed: 2023-06-14
Description: To get started, we are taken through general deployments, and then introduced to the Canary. The idea here is to have a small new version deployed along with the current stable version. Kubernetes does this by allowing a container with the new code to be deployed, and using a load balancer to direct part of the traffic at it. They then go on to explain the advantages of using the canary rollout. We then have an interlude to explain service mesh and how Istio is one. They then do a walkthrough, using Istio and showing us the commands. They prep two docker images and push them to a repo, then create a deployment for the current and canary images. They then prep the Istio bits, and put them into the cluster. They then tweak the balancer, to shift more of the traffic to the canary. I actually like this approach.
BottomLine: Good high and low level approach to Canary deployment using Istio
==
URL reference: https://labs.withsecure.com/publications/executing-arbitrary-code-executables-in-read-only-filesystems
DateReviewed: 2023-06-15
Description: This article starts by explaining what a read only filesystem is, and how it helps in a container situation. It then shows how to work around, with a read-only filesystem in place, and execute code in three different scenarios. It then talks about a few ways we can prevent or detect these novel approaches to running code without file write access. An interesting approach to security and threats, recommend reading it.
BottomLine: Talks about read only file systems in containers and security issues and mitigations
==
URL reference: https://www.securitymagazine.com/articles/98474-the-way-forward-for-kubernetes-security-eliminate-standing-privileges
DateReviewed: 2023-06-16
Description: This article first talks a bit about what Kubernetes is, and then explains why containers are good and what benefits they provide. It then pivots to the bad part of Kubernetes -- security, or the lack thereof. They then argue that Kubernetes is configured with too many users and have too many permissions, because it is complex. Further, they argue that the speed of deployment works against security in DevOps, because while security it coveted, if it slows down velocity it should be avoided. Refrershingly, we then talk about JIT privs to tune permissions to needs. They then explore Zero Standing privileges, where all privs are granted on the fly, to be revoked after some specified time and only granted as required. I think it's a good thinkpiece.
BottomLine: Decent high level review of Kubernetes security weakness and a good approach to mitigate them 
==
