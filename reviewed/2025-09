
URL reference: https://www.macchaffee.com/blog/2024/you-have-built-a-kubernetes/
DateReviewed: 2025-09-01
Description: Our article today is a humorous take on you have built a compiler, where we poke fun at using a simple way to do what another tech does, but as you need more features you rebuild the other tech, just worse and way less maintainably.
BottomLine: Good joking letter on why you shouldn't rebuild Kubernetes again
==
URL reference: https://securityboulevard.com/2025/08/love-your-kubernetes-add-ons-securing-kubernetes-beyond-the-core/
DateReviewed: 2025-09-02
Description: Today's article is on Kubernetes add ons and making them secure. After a bit of background, we get into what Kubernetes add ons are and why they matter. They talk about Kubernetes base and what K8s does when it starts, and then it talks about the required add-ons like CNI and DNS, and then dipping into the optional things like TLS and Ingress among other things. Then we move into the security side, explaining that add ons are often run with more privs. They make the point that an addon with a security issue can lead to an easier compromise for attackers. They do talk about why it is hard to keep add ons updated - compatibility, lack of rollbacks, and set it and forget it among others. They then talk about the issues that people had with K8s upgrades in the past, and a bit about how this is improving. They have great suggestions - bring the pain forward, using open source tools to automate the boring stuff. They also advocate using a staged approach and doing it more often, before wrapping up.
BottomLine: A good discussion on security around Kubernetes add ons
==
URL reference: https://www.nivelepsilon.com/2024/06/19/understanding-kubernetes-network-policies-a-friendly-guide/
DateReviewed: 2025-09-03
Description: What we're looking at today is a friendly guide to Kubernetes network policies. We start with a bit of background, before digging into what Kubernetes network policies actually are. They go through concepts like what a network policy is, what selectors are, and what ingress and egress rules are. Next we look at how to craft the policies as YAML files, going through 3 examples before summing up. Good compact intro.
BottomLine: Solid intro to Netowrk Policies in Kubernetes with YAML examples
==
URL reference: https://medium.com/@DynamoDevOps/12-kubernetes-security-anti-patterns-you-ship-every-week-and-the-one-line-fix-for-each-a5e3456ec605
DateReviewed: 2025-09-04
Description: This article is about quick security fixes to Kubernetes issues that occur all the time. We start with a short intro, and then dive right into the issues. The format is to list the issue, what the security badness is around it, and a one-line fix to it is in YAML format. The concerns include running pods as root, allowing priv. access, using "latest" tag in Prod, and hardcoding secrets. Good appraoch and execution.
BottomLine: Good walkthrough of simple security concerns in Kubernetes and quick fixes
==
URL reference: https://learnkube.com/issues/144
DateReviewed: 2025-09-05
Description: Today's article will look at Yoke, a possible replacement for Helm as a resource deployment system. We start with a short intro, we dive into the differences between them. They both map inputs to outputs basically, but the differences is that Helm uses Go to convert the templates to resources; they point out things like type disagreement. Yoke uses WebAssembly, which means anything that can produce a WA output can be used to write it. Where Helm calls the templates "charts", Yoke uses "flights". They also point out that Yoke can use Helm, because Go can be compiled to WA. The interesting thing is that a flight is a full program that writes resources to stdout. It does go through a code demo in Go using Yoke. Interesting project.
BottomLine: New project with a new take on Helm for Kubernetes called Yoke
==
URL reference: https://lwkd.info/2025/20250814
DateReviewed: 2025-09-06
Description: This article is about new development in the Kubernetes core. It talks a bit aboug SIGs and surveys, what is coming up release wise, and a new way to delete nameSpace resources in an orderly way.
BottomLine: Interesting updates on what is going on in core Kubernetes
==
URL reference: https://www.fairwinds.com/blog/kubernetes-add-ons-increasing-cluster-security
DateReviewed: 2025-09-07
Description: Our article today is the transcript of an interview about Kubernetes add ons security. There is a linked YouTube video, and they are going through a number of good topics, but they also include here some good diagrams or bits of good advice for your cluster, like knowing what you are running and staying current, for instance. 
BottomLine: Good interview over various bits of Kubernetes and add on security
==
URL reference: https://www.cncf.io/blog/2025/08/01/pac-in-the-cloud-native-landscape/
DateReviewed: 2025-09-08
Description: This is a toe dip into the area of Policy as Code as it applies to Kubernetes, and this is part 2 of 3. There's a bit of background before starting to talk about Cloud Native PaC, where they talk about various things like identity providers and runtime security among others. They surface a few tools like Kyverno and OPA with a bit of explaination. They then dive into PaC in Kubernetes, and look at it down to the YAML snip level. We then get a peek at the Maturity model, before wrapping up and giving some reading recommendations.
BottomLine: Interesting article about Policy as Code applied to Kubernetes
==
URL reference: https://cloudnativenow.com/sponsored-content/hedgehog-simplifies-on-premises-ai-network-configuration/
DateReviewed: 2025-09-09
Description: Our article today focuses on AI network configuration. We start with a bit of background, looking at various things like demands for high speed and complexity of all the pieces of the network. To solve this, our authors pose Hedgehog as the solution. One of the things they mention is doing all of this in a multi-tenant setup, which can complicate things. We then dig into how Hedgehog approaches this - first, with a low-level "wiring" diagram, where you describe through YAML how the physical topology is set up. Next is what they call Operational Abstraction, which uses YAML to partition using VPCs to have multiple tenants. We then do a feature tour, looking at things like Automated provisioning and lifecycle management, simplified multi-tennant and intelligent peering, and monitoring and troubleshooting to close things up. An interesting product.
BottomLine: Intro and a bit of pitch for a new net mgmt player in the Kubernetes space
==
URL reference: https://nvd.nist.gov/vuln/detail/CVE-2025-7342
DateReviewed: 2025-09-10
Description: This is a CVE advisory about the Kubernetes Image Builder, a process used to create Windows containers. On certain providers, the image build process used hard coded creds which allowed root access. The vuln is limited, as at the conclusion of the build these containers are destroyed, but does allow anyone with knowledge to take over the build container as root.
BottomLine: Good discussion on the implications of this vulnerability
==
URL reference: https://medium.com/devsecops-community/serverless-vs-kubernetes-whats-best-for-your-devops-strategy-d7f02f8a1ea1
DateReviewed: 2025-09-11
Description: Today's article is a face off between Kubernetes and Serverless. We start as we often do with a brief intro, and this one dives into what is the best approach for DevOps. We dive in with a decent section on "what is serverless", which talks about what it is, the benefits, and also providers you can use for it. Next up we go thorough a "what is Kubernetes" section, where it speedruns an overview and touches on providers that do this service too. Next up is a head to head comparison, where they go through 5 key areas and explain how each approach tackles them. They wrap with some basic recommendations, and even talk about possibly running both - they hybrid approach. Ultimately, the decision that fits your enviornment is what works best for your company.
BottomLine: Good walkthrough of Serverless vs. Kubernetes for hosting apps
==
URL reference: https://developers.redhat.com/articles/2025/08/19/smarter-memory-control-sql-server-rhel-cgroup-v2?sc_cid=RHCTG0240000434042#
DateReviewed: 2025-09-12
Description: This article focuses on MS SQL Server running on RedHat Linux. They start by talking a bit about cgroup v2, and how this impacts SQL Server. The cgroup allows the OS to control various resources like CPU usage and RAM, among others. Using version 2 allows a bit finer control, and they mention that it is enabled by default in most recent versions. It seems SQL server had limits set for bare metal or VMs, but not for containers or v2 until now. But a recent update makes it cgroup v2 aware, so it'll respect resource limits set through that.
BottomLine: Interesting update of MS SQL Server for containers around cgroup v2
==
URL reference: https://kube.fm/bulletproof-kubernetes-saptarshi
DateReviewed: 2025-09-13
Description: Our video today is a podcast interview talking about container security and rank it as Job zero. They talk a bit at a high level first, but then dive into security tools from a provider (in this case, AWS). They talk about various tools that support security, like protecting secrets or encryption bits. They then go on to talk about logging from the perspective of observability and talk about how to link these to real-world impacts. They then touch on performance and testing to improve both coverage and also make things safer. They do a bit of back and forward looking on where K8s started and where it is going in the next 10 years. Good episode.
BottomLine: Interesting interview about AWS perspective on security in a podcast
==
URL reference: https://kubernetes.io/blog/2025/08/19/tuning-linux-swap-for-kubernetes-a-deep-dive
DateReviewed: 2025-09-14
Description: This article will talk about using Linux swap and tuning it to use in Kubernetes. Traditionally, containers don't use swap to have guarantees of system performance. But with the upcoming v1.34 release, a new feature called NodeSwap will graduate to stable, allowing the use of swap with Kubernetes. After a bit of background, we dig it. First, we examine Linux swap, and talk about how memory and swap are managed in general. They talk about anonymous memory and file backed memory, and how they are different. We then get into various swap tunables, and how they work in general. Our author then runs some tests, to show how they work in practice. They talk about a bunch of risks around using swap on container clusters, and how to tune to mitigate these risks.
BottomLine: Very interesting discussion about using Swap in a Kubernetes cluster
==
URL reference: https://www.datadoghq.com/blog/kubernetes-release-august-2025/
DateReviewed: 2025-09-15
Description: Our article today is on new stuff in Kubernetes v1.34, specifically around scheduling and resource management. We start with a bit of background as is usual, we dive into new and changed stuff. They do a bit of an overview, before diving into the nitty gritty - they list the item, what level it's at (alpha/beta etc) and how to enable it, and a few para description. We start with scheduling, covering async sched API calls (beta), Pod placement (alpha) and container stop signals. Next set is Dynamic Resource allocation related stuff for GPUs, FPGAs and smart NICs. Handle extended resource requests via DRA driver (alpha), device binding conditions (alpha), consumable capacity for devices (alpha), health status to PodStatus (beta).
BottomLine: Decent article reviewing new features for Kubernetes v1.34
==
URL reference: https://portswigger.net/burp/documentation/dast/setup/self-hosted/kubernetes/architecture-overview
DateReviewed: 2025-09-16
Description: Today's article has a companion video, which I think carries a lot more water then the text version. The video is concise and well narrated, explaining how the various components work - the enterprise server, the web server, and the scanning machines that generate the reports on what the eventual target machine(s) are running and what might be vulnerable. They do mention that everything is backed by a database, and things are managed by either users or API clients through the web server box.
BottomLine: Quick overview of how to set up the Kubernetes Burp scanning suite
==
URL reference: https://undercodetesting.com/the-caninesh-idp-a-new-dev-centric-kubernetes-or-a-security-blind-spot/
DateReviewed: 2025-09-17
Description: Our article today talks a bit about IDPs, and whether they are useful tools or security problems. The approach is as a learning exercise, setting it up and poking at it a bit. We start with the learning objectives, and then we dig into the actual stuff. They lay out how we gather info on the installed machines, and how we can move forward. We then take a peek at the container security bits along with the supply chain review. Next up is looking at the network policy, and we do that by looking at the templates for the IDP apps. Then we peek into resource limits, check for misconfigs, monitor server access and other logs, and finally reconcile for drift detection. They even have a link to try the lab live on their site.
BottomLine: A walk through the security implications of an IDP with Kubernetes
==
URL reference: https://github.com/ory/kratos
DateReviewed: 2025-09-18
Description: Today's article is a review of a repo which contains Kratos, which is a Identity, user mgmt and auth system for the cloud. Basically it's a multifaceted auth platform, supporting a huge number of protocols and used by lots of enterprise businesses. They have a big blurb on what it is, allowing registration and log in, MFA, verification, recovery, profile/account management and admin APIs. They link to a wide range of various docs and guides to get started, and claim in scales into the billions of users. Interesting tool.
BottomLine: Platform to handle all Auth needs for user stuff in your app
==
URL reference: https://www.darkreading.com/vulnerabilities-threats/quiet-revolution-kubernetes-security
DateReviewed: 2025-09-19
Description: Our article here talks about changes to bits around Kubernetes and how that impacts Kubernetes security. They talk about heavyweight traditional OSes like Ubuntu and RHEL as opposed to what many containers need. They then talk about newer approaches like Talos Linux which is a paradigm shift. While it brings in immutable, minimal and ephemeral to help with security, it also complicates things as it looks different and will require new security tooling and approaches. There is a bit of vebiage on the fact that Talos isn't FIPS certified, and speaks to what you have to explain to your CISO to be able to use such a system.
BottomLine: Interesting take on Talos Linux and its security impact on Kubernetes
==
URL reference: https://www.sawmills.ai/blog/container-logs-in-kubernetes-how-to-view-and-collect-them
DateReviewed: 2025-09-20
Description: This article is going to dig into container logs, a topic that isn't always the most exciting and can sometimes be frustrating. We start with a bit of background, before getting into a bit of hands-on. We start with getting kubectl installed and verified. We then do a bit of config for kubectl, so we are ready for stuff. Now we do a bit of theory, talking about container logs and layout of the terminology. Now we go through how we can use kubectl to see the various logs - some easy general CLI logs commangs and then a set of more advanced in a second grouping. They also show how to fire up a shell and see the raw log file inside the container and finally how to look at it in Kubernetes dashboard. They talk about grabbing the logs to a file, and a bit about using various filters and options to surface specific info from the logs. Suggestions they have are using structured logs (JSON), using proper log levels and filters to grab the right info, log rotation and retention, and finally resource limits for logging. They even include some troubleshooting and advanced strategies, to make sure you get the logs you need.
BottomLine: Decent walkthrough and approaches to logging on Kubernetes
==
URL reference: https://multicorewareinc.com/kubernetes-as-a-service-on-private-cloud-how-kaas-streamlines-provisioning-strengthens-security-and-delivers-predictable-value-for-modern-workloads/
DateReviewed: 2025-09-21
Description: Our article today is a new wrinkle on an old problem - how to manage and run infra, paticularly Kubernetes in a private or on-prem way. We start with a short bit of background, where they talk about the landscape and then K8s as a service (KaaS), their proposed approach. We dive in with a review of what makes K8s hard - managing versions, scaling limits, limited customization and manual provisioning among others. The idea of KaaS is for this part to be easier to manage. They talk a bit about GUIs before going through a laundry list of features, like auto scaling, fault tolerance, node group mgmt and more, with 12 points in all. We finally dive into the nitty gritty, geting into how KaaS works. We have a diagram and a paragraph, but not much technical details. We then walk through the biz value of KaaS, before looking at use cases of it. They have 4 bullet points, with a scenario and some quick details. So, this is an interesting concept, but in this piece it lacks some of the key tech details to help it be a choice.
BottomLine: Interesting approach of Kubernetes as a Service in private settings
==
URL reference: https://azure.microsoft.com/en-us/blog/azure-kubernetes-service-automatic-fast-and-frictionless-kubernetes-for-all/
DateReviewed: 2025-09-22
Description: This article focuses on the new Microsoft offering of "AKS automatic", an easy way to deploy Kubernetes on Azure. We start with a bit of background, before getting to the main rub - removing the "Kubernetes tax" of getting a new cluster up and running. They claim it lowers the learning curve, mitgates security issues and frees up resources. The goal is "one click" clusters. They detail all of the enhancements and easy options. An interesting option.
BottomLine: New MS option of AKS automatic for deploying Kubernetes
==
URL reference: https://ssaicharanclan.medium.com/kubernetes-ingress-solving-load-balancer-challenges-and-reducing-costs-215aa7ca1a45
DateReviewed: 2025-09-23
Description: Our article today is on how Ingress can reduce costs and do load balancing. We start with looking at how load balancing works, and the fact that each LB requires a static IP. They then go through a bit of history, with old systems using a single IP routing to many apps or sites, where now we have containers where many app parts may be deployed to different nodes, with more complexity and possibly cost. The authors advance K8s Ingress can solve these issues. They point out Ingress can do sticky sessions and a number of different routing strategies, including rate based, path or domain routes, and finally white and black listing of IPs. They do mention that you can use one of three Ingress controllers, best known is Nginx. They also briefly explain the interaction of Ingress resources and Controllers.
BottomLine: Good intro to Ingress and was to save money with it on Kubernetes
==
