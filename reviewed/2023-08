
URL reference: https://medium.com/@kessilerrodrigues/mastering-kubernetes-logs-a-guide-to-understanding-your-pods-129f4de56b2b
DateReviewed: 2023-08-01
Description: In our intro, we learn logs are good -- but how can we access them, especially in crashed or currently running pods? Oh, I like it, our author is going through commands, and he's taking us through from first principles. We are shown how to find a pod of interest, how to see the logs and how to view them in real time, along with all of the above in a namespace. You can use a flag to see a recent run, and how to choose a specific container in a multi-container pod. And that is the walkthrough -- short and sweet, and decently done.
BottomLine: Hands on quick walk through on Kubernetes log commands
==
URL reference: https://itnext.io/innovative-ways-to-use-weighted-canary-deployments-and-multiple-container-runtimes-in-kubernetes-aeeafc1acfa5
DateReviewed: 2023-08-02
Description: For the intro, we're going to leverage K8s features to do something neat. The author is looking at using canaries with weights or possibly route based deployments from ingress to do something a bit different. They share that usually we see either ephemeral containers or copies to find issue -- but their idea is to use a different container runtime for debugging. They are using the Kata runtime for this, instead of the default runc. They even talk about a scenario where Kata can provide isolation if there is a security issue that isn't immediately patchable. And, they have a good diagram showing the two use cases. They then run through the YAML to show how the config would look, and how to set up the canaries to split traffic. Overall, an interesting article.
BottomLine: Innovative look at using canaries for isolation and debugging in Kubernetes
==
URL reference: https://www.hackread.com/cryptojacking-kiss-a-dog-targeting-docker-kubernetes/
DateReviewed: 2023-08-03
Description: Intro explains that a new cryptojacking attack was discovered that targets Kubernetes and docker. We then visit a definition of Cyptojacking, and then dive in to the hack. It uses a Python script to install curl and add a periodic command to the system, and it is named after the control domain, which is a variation of "kiss-a-dog". A number of hiding techniques are used to obfuscate the code, the processes, and the goal -- which is to mine Crypto and send the mined hashes to servers under the control of the jackers. A good walk through.
BottomLine: A high-level walk through of a cryptojacker targeting Kubernetes and Docker
==
URL reference: https://securityboulevard.com/2023/08/the-complete-guide-to-kubernetes-rbac/
DateReviewed: 2023-08-04
Description:  Our into goes regular places - K8s is awesome, but ... security; so they are going to take us through RBAC here. We dive right in, and explain how RBAC basically works in one sentence. They then break this down, explaining each of Authentication, Authorization, and Admission control in a short paragraph or two, and how they work together to form a permission scheme. Next we dive into RBAC rules, including a YAML example. They explain how the API group, the verb (action) and target (resource) form a rule. We then get some examples in YAML with explanations of what is going on. We then touch on 5 best practices, many of which are just good security practices. We then appraoch "day 2" ops, including review of RBAC as deployed. They point out that each K8s cluster is an island perms management wise, and it's not always easy to understand how roles are used.They then enumerate these 4 issues with multi-cluster management. They do pitch Armo as a possible solution, as the article seems sponsored by them.
BottomLine: Good intro to RBAC for Kubernetes
==
URL reference: https://www.huntress.com/blog/one-msp-three-microsoft-365-compromises-72-hours
DateReviewed: 2023-08-04
Description: Intro talks about 3 email related attacks on Microsoft 365, a cloud service many companies use. In this case, the attacker leverages email rules to hide info they don't want the victims to see. It seems that the attacker gains contol over the targeted account by an undisclosed mechanism. They go through how they determine a compromise, show the installed rule, and finally explain how they remediated the issue. The MO seems similar for all 3 attacks, but only the last attack seems to have a specific target -- to allow for invoice manipulation and ultimately allow the attackers to get monies paid to them by the victim company. A weakness is there isn't any suggestion on how to prevent this, only a wave to "buy our product" to detect it.
BottomLine: Good illustration of ways attackers can compromise Cloud services
==
URL reference: https://sysdig.com/blog/top-15-kubectl-plugins-for-security-engineers/
DateReviewed: 2023-08-05
Description: We start with a blurb about how k8s is customizable, and this is mainly done through plugins. Then we do a definition of what a K8s plugin is - an extension to the kubectl command. We are then introduced to a plugin manager of sorts, krew, which helps us to install and manage plugins. We then start going through the plugin tools. They do this with a link, a short blurb on what the plugin does, and some inline snippets to show how to use the plugin. There are a variety of plugins covered, in the network, secrets, and cluster management areas. At the end, they do a quick walkthrough of a shell-based plugin if you want to author one yourself. 
BottomLine: Good intro to Kubernetes security related plugins
==
URL reference: https://romanglushach.medium.com/docker-defense-proven-strategies-for-secure-containerization-335166a843f8
DateReviewed: 2023-08-05
Description: In a familiar intro, Docker is not secure by default, and containers are ephemeral and dynamic. We are then presented with a table with 8 risk categories, along with description, example and mitigation columns. After the chart, we are presented with best practices. After a short blurb, we get another table with the name of the practice and a description for keeping Docker secure at a host and daemon level. Finally, another motivating blurb for the last table to give us best practices for securing Docker images and containers. Now, I appreciate the thought here, but I think that this could have been better strucured. As is, I think pros might get it, but managers will be lost.
BottomLine: Decent high level quick walkthrough of Docker security issues
==
URL reference: https://botkube.io/blog/use-chatgpt-to-troubleshoot-kubernetes-errors-with-botkubes-doctor
DateReviewed: 2023-08-06
Description: Our intro touts both K8s and AI/GPT, and the company our author works for is integrating GPT into K8s. We're treated to a couple more paras of how GPT is awesome helping out with K8s, and then they have some examples. Apparently it's integrated as a GUI button, and allows interactive questions to be asked, like "how to I create a Pod". They call their integration "Doctor", and it leverages another one of their products which surfaces log info, which allows it to give tailored suggestions. Confusingly, while it seems the doctor and do some recommendation-based commands, it can't do simple things like spinning up a pod. No, wait -- it seemingly doesn't do that. Did no one proofread this copy? While this seems like a neat thing to try, the info is very high level and not very helpful. This is a case a video or walkthrough would have helped a lot.
BottomLine: High level GPT product pitch which seems a bit confused.
==
