
URL reference: https://www.chrisfarris.com/post/preinvent2023/
DateReviewed: 2023-12-01
Description: So, this is a pre-reInvent roundup, to prep people for the annual AWS show. Seems there is a lot of pre-show action, with 511 announcements in the lead up. They break things up into a few overall areas, and then post a one paragraph blurb from AWS and their opinion on each. There are about 3 dozen of these, and I like the approach. Also included are a link to the original announcement and other links where appropriate. Well done.
BottomLine: A review of AWS announcements prior to reInvent 
==
URL reference: https://medium.com/@paritoshblogs/building-kubernetes-detections-strengthening-security-with-real-world-examples-8268cddd852f
DateReviewed: 2023-12-02
Description: Kubernetes does awesome stuff, but needs security to start off, wow, I don't know if we would have known. After a bit more in that vein, we dive in. Our first point is we have to know the K8s enviroment, which, okay. Next is common threat vectors, and they mention unauth API access. Third includes a YAML snip and tells us that API server auditing is important, but with no tie in to the snip. Fourth has another YAML snip, and talks about trusted container images, but the snip is about privileged containers. Fifth talks about network policies, with a YAML snip that seems to be deny all. Okay, so I'm going to stop there, as the "hands on" seems to be including YAML snips and just ignoring them? The ideas in the points are decent, but without tie in they are short and vague. Feels like this could have been good, but never got out of the draft stage.
BottomLine: Underwhelming and not hands on Kubernetes security walkthrough
==
URL reference: https://thenewstack.io/breaking-down-the-wall-in-devops/
DateReviewed: 2023-12-03
Description: The DevOps wall is what we are going to dive into. After a bit of background on the wall concept, being the barrier between groups in the org, we get into a formal definition. They define it as the transition point(s) between teams, where things are handed over from one group to another. One important thing is metrics, and different groups are measured by different metrics. To break down the wall, they suggest a cultural shift is needed -- for instance, all teams have the same metrics to work towards. They also make the point that healthy orgs are important, and that people are informed of where things are in the cycle. Overall a decent piece.
BottomLine: Tackles the DevOps wall with strategies to tear it down
==
