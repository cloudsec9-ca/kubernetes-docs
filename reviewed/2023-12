
URL reference: https://www.chrisfarris.com/post/preinvent2023/
DateReviewed: 2023-12-01
Description: So, this is a pre-reInvent roundup, to prep people for the annual AWS show. Seems there is a lot of pre-show action, with 511 announcements in the lead up. They break things up into a few overall areas, and then post a one paragraph blurb from AWS and their opinion on each. There are about 3 dozen of these, and I like the approach. Also included are a link to the original announcement and other links where appropriate. Well done.
BottomLine: A review of AWS announcements prior to reInvent 
==
URL reference: https://medium.com/@paritoshblogs/building-kubernetes-detections-strengthening-security-with-real-world-examples-8268cddd852f
DateReviewed: 2023-12-02
Description: Kubernetes does awesome stuff, but needs security to start off, wow, I don't know if we would have known. After a bit more in that vein, we dive in. Our first point is we have to know the K8s enviroment, which, okay. Next is common threat vectors, and they mention unauth API access. Third includes a YAML snip and tells us that API server auditing is important, but with no tie in to the snip. Fourth has another YAML snip, and talks about trusted container images, but the snip is about privileged containers. Fifth talks about network policies, with a YAML snip that seems to be deny all. Okay, so I'm going to stop there, as the "hands on" seems to be including YAML snips and just ignoring them? The ideas in the points are decent, but without tie in they are short and vague. Feels like this could have been good, but never got out of the draft stage.
BottomLine: Underwhelming and not hands on Kubernetes security walkthrough
==
URL reference: https://thenewstack.io/breaking-down-the-wall-in-devops/
DateReviewed: 2023-12-03
Description: The DevOps wall is what we are going to dive into. After a bit of background on the wall concept, being the barrier between groups in the org, we get into a formal definition. They define it as the transition point(s) between teams, where things are handed over from one group to another. One important thing is metrics, and different groups are measured by different metrics. To break down the wall, they suggest a cultural shift is needed -- for instance, all teams have the same metrics to work towards. They also make the point that healthy orgs are important, and that people are informed of where things are in the cycle. Overall a decent piece.
BottomLine: Tackles the DevOps wall with strategies to tear it down
==
URL reference: https://www.linkedin.com/feed/update/urn:li:share:6998612377482989568
DateReviewed: 2023-12-04
Description: This is just a short list of ops and sec challenges in Kubernetes and containers. There are only 6, and with no explaination it is a bit of a choose your own adventure. I mean, they are all true to an extent, but "image misuse" seems like it could mean a couple things, at least. There is also no suggestions or help, just a list of this might be bad.
BottomLine: Simple list with no context or remediations
==
URL reference: https://testkube.io/learn/automate-and-enhance-ci-cd-testing-with-github-actions-and-testkube
DateReviewed: 2023-12-05
Description: We start with no integration testing making developer experience bad. This article talks about using GitHub actions with Testkube. So, they start by explaining that Testkube allows you to build tests and test workflows in K8s. So you can use multiple integrations, like CLI, GitOps or what we'll be looking at, GitHub actions. They then lobby that their framework does a bunch of things as a suite that helps testing, which ok - fair. Now to the hands on - we have a few things needed, like K8s cluster, Testkube agent and API tokens, and Github account with actions enabled. They then create a test, add some parameters to check, add a Github action. They then demonstrate how a PR is able to merged on a successful test, and how it is blocked on a failed test. Interesting tool.
BottomLine: Demo of integrating Testkube with Github actions in Kubernetes for integration testing
==
URL reference: https://www.cncf.io/blog/2023/12/05/kyverno-completes-third-party-security-audit/
DateReviewed: 2023-12-06
Description: This is an announcement post explaining that Kyverno has passed a third party audit. It shows a number of CVEs, their severities and which component is affected. Basically it shows that Kyverno has a good overall security posture, and although some things were discovered the development team were able to fix the issues. My feeling is this is aimed at bigger shops.
BottomLine: Announcement that Kyverno has successfuly passed a third party security audit
==
URL reference: https://blog.shellnetsecurity.com/2023/11/681/security/how-to-install-and-use-starboard-to-protect-your-kubernetes-cluster/
DateReviewed: 2023-12-07
Description: This is a walk through, so we start with a tiny paragraph of background on how the author discovered Starboard, and then we dive right in. He notes there are a few ways to deploy this, picks the Helm method, and does a couple changes to the config, and then deploys things to his cluster. He then shows the results of running the Helm charts, and looks at the performance spike caused by running the tool. He then shows the results from the tool, first as a summary and then as a detailed report. The author updates a version to address an issue, runs into a bug causing a crash loop, does some diagnostics and finally deployes the working update. Overall an interesting trip!
BottomLine: Good walkthrough and troubleshooting with Kubernetes security tool Starboarc
==
URL reference: https://ostridelabs.com/hands-on-kubernetes-security-the-threat-of-misconfiguration/
DateReviewed: 2023-12-08
Description: Starts with Kubernetes is transformative but complex security wise. Our article is going to focus on getting configs right. After a bit of setup, they argue that misconfigurations are the cause of vulnerabilities, including bad network policies, access controls and exposed secrets. To address these issues, they have a range of mitigations, including audits, automatic security checks, education and strong access controls. They do briefly mention a provider that suffered an issue through an unsecured k8s dashboard.
BottomLine: Lightweight and high level intro to Kubernetes security concerns
==
URL reference: https://securitylabs.datadoghq.com/articles/kubernetes-security-fundamentals-part-2/
DateReviewed: 2023-12-09
Description: Opens explaining that this is part of a series. We dig in by looking at unmanaged Kubernetes setups, with a diagram and discription of the ports open and their function. We then examine managed setups and how they differ, going a bit into the top 3 providers. There is then a discussion of how to secure the K8s APIs in the various cases.
BottomLine: Good high level examination of Kubernetes API security
==
URL reference: https://go.weave.works/GitOps-and-K8s-for-Beginners.html
DateReviewed: 2023-12-10
Description: Instead of being a single article, this is links to a series of resources to help a beginner with Kubernetes and GitOps. First we start with an diagram and infographic, mapping out the steps. Next up is a half hour vid from CNCF on getting started in GitOps and Flux, followed up with a beefy article on what is K8s. Finally we have an article on CI/CD tools for K8s, tied in with a short reference book on GitOps for absolute beginngers. This is actually a well done little guide.
BottomLine: Excellent group of resources to get into GitOps in Kubernetes
==
URL reference: https://www.helpnetsecurity.com/2023/12/06/pentesting-kubernetes-open-source-tools/
DateReviewed: 2023-12-10
Description: We start with K8s being great, except for security. This article is going to touch on five pentesting tools. The coverage is only about a paragraph per tool, but it give the general gist. They cover kubeaudit, kube-bench, KubeScan, Kubetap and Peirates. They don't compare, rank or give any opinion on the tools, so really it's only helpful as a list and an idea of what the tools do.
BottomLine: Only useful as a listing of pentest tools for Kubernetes
==
URL reference: https://morioh.com/a/d2ca336967df/kubernetes-cheat-sheet-the-ultimate-resource-for-kubernetes-users#google_vignette
DateReviewed: 2023-12-11
Description: This is a decent length quick CLI sheet for while you are coming up to speed on Kubernetes. It has 19 sections and seemingly hundreds of commands. Things are divided into topic areas, and even has links to some references. I wish it had a bit more verbiage or direction, but it's good for what it is trying to do.
BottomLine: More reference than cheat sheet, still a decent doc for early in your Kubernetes journey
==
URL reference: https://venturebeat.com/security/protecting-against-new-kubernetes-threats-in-2024-and-beyond/
DateReviewed: 2023-12-12
Description: Scary things in security with Kubernetes is our start. This article focuses on a few attacks, how they work and how to detect/prevent/mitgate them. Our first is Scarleteel, which uses a web app to access cloud based data and do cryptomining. The next few are pure cryptominers, one of which (Dero) scans for anonymous Kubernetes API access, and the second (Monero) uses priv escalation to run it's payload. Last up is RBAC-buster, which after gaining a foothold scans for AWS keys to do it's thing. They strongly recommend real-time views of your clusters, so you can see and respond to issues in a timely way. Good read.
BottomLine: Good walkthrough of a few popular Kubernetes attack vectors and their mitigations
==
URL reference: https://www.techzone360.com/topics/techzone/articles/2023/10/12/457406-5-kubernetes-security-tips.htm
DateReviewed: 2023-12-13
Description: We start with Kubernetes is great, but, surprise surpirse, security is an issue. So our article will look at 5 tips to improve security. Their approach is decent - they have a short recommendation, followed by a few paragraphs  of the why and how at a high level. Their top points are isolate sensitive workloads, enable RBAC, use service mesh, leverage K8s monitoring and security tools, and scan container images. All solid points, and decently explained.
BottomLine: Good high level approach to 5 Kubernetes security improvement tips
==
URL reference: https://www.silverliningsinfo.com/security/kubernetes-co-founder-flags-clouds-big-open-source-problem
DateReviewed: 2023-12-14
Description: Warning of an existential crisis with regards to security in open source. The thesis here is that small parts of open source can have outsized impacts. They cite things like Left-pad and Log4j to make their case. They talk a bit about how cloud vendors do vetting, but that might not be passed onto end users. They also touch on abandonware, or cases where developers give up on a software package. There is some talk about boosting contributions for important libraries, and strategies for recruiting new developers to libraries. It's an interesting read.
BottomLine: Interesting take on Open Source contributions and the need to ensure projects are properly run and contributed to
==
URL reference: https://medium.com/@paritoshblogs/your-comprehensive-guide-to-kubernetes-security-0a215518b710
DateReviewed: 2023-12-14
Description: Starts with K8s great, but needs security. Our author is going to touch on a few key K8s security points. They have a bunch of top level headings, and generally have 2 or 3 points under each. Their top level points are Control plane security, Node security, Network security, Image security, Secrets management, Monitoring and Logging, and finally Incident Response. It's a very high level approach, but does touch on most of the big topics. I'd say it is a decent intro.
BottomLine: Decent intro to Kubernetes security topics
==
