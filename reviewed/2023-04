
URL reference: https://itnext.io/kubernetes-security-standoff-6116a312fedd
DateReviewed: 2023-04-04
Description: This article start with an anecdotal story, where the author explains how by using AppArmor they had been able to mitigate a serious vulnerablity. Once we get into the meat, the example they use is a legacy app with no source code. We then go through a mini-tutorial on setting up AppArmor. AppArmor is a Linux security tool which uses profiles to allow and deny access. They use an interactive generator, which observes what is going on to build a profile. They explain how to set it up, including reviewing the proposed rules, and note you need it both in your containers AND installed on your nodes to get the most out of it. I have a couple sticking points -- one is that generators may not get ALL of your legitimate usage, so be careful -- and two, while this is one important tool, security is best done in layers, and there are other things you should be doing too.
BottomLine: Good article on how a Linux-level tool (AppArmor) can be leveraged to be a strong Container security tool.
==
URL reference: https://containerjournal.com/features/are-your-kubernetes-workloads-secure-unsettling-trends-in-latest-benchmark/
DateReviewed: 2023-04-05
Description: Unlike a few recent reviews, this one starts out a bit odd, by conflating cloud and Kubernetes -- as if the only cloud option IS Kubernetes. It then talks about a Fairwinds survey, but drops numbers from a CNCF report. Then, without pointing to evidence, it confidently states that K8s security is trendingin the wrong direction. A bit further on they state that fewer orgs are turning off unneeded services then in 2021, but don't cover why -- better understanding of what is and isn't secure, or more orgs using, or newer users leaving defaults -- it's not clear. We then go through writeable filesystems, privledged access and running as root, all ticking up. We then go through vulnerable images and glance at outdated Helm charts and images, both ticking up as well -- but we don't get a definition of "outdated". Our last is deprecated APIs, which also showed a change -- but is this the Kubernetes API, or other APIs? The article doesn't say. So, while the topics covered are good, the approach and explaination aren't there.
BottomLine: Good for top-level topics, but lacking in approach and insight
==
URL reference: https://itnext.io/protecting-your-kubernetes-environment-with-kubearmor-76b02fc2209b
DateReviewed: 2023-04-07
Description: Simple article with a walkthrough to show how KubeArmor works. They use an image vulnerable to ShellShock, and run an exploit against it in a vanila setup; they then install KubeArmor and show how it protects against these attacks. I like the hands-on approach, and also showing you how a vulnerability works and how it can be mitigated.
BottomLine: Good general demo of how a Container might be vulnerable and a mitigation technique that works around the issue
==
URL reference: https://charlesarea.medium.com/how-to-integrate-legacy-vms-into-container-pipelines-on-kubernetes-with-kubevirt-555137fb3f4a
DateReviewed: 2023-04-08
Description: For this article, we're doing a practical hands on walkthrough of KubeVirt, a Kubernetes extension that allows a VM to be run under the cluster. The article starts with the backstory which I love, and then explains and walks through the bits to run the pod that will contain the VM. For the article, they use a Windows VM. It lets us know that by leaning on QEMU, we can do live migration, snapshots and clone our VM. It then goes through a practical walkthrough of each capability, so we can see how to perform them all. It wraps up by mentioning that you can manage most VM limits and permissions through standard Kubenetes tools.
BottomLine: Good initial walk through of KubeVirt, a way to run VMs in your Kubernetes cluster
==
URL reference: https://aster.cloud/2022/09/10/the-2-minute-test-for-kubernetes-pod-security/
DateReviewed: 2023-04-09
Description: Laying the groundwork, this article is going to talk about pod security, and it says we'll do that without installing anything in the cluster. They are going to use Kyverno for checking, and we'll use remote kubectl which will avoid the need for anything on the actual cluster -- or so they claim. We end up having to install/update the CLI package manager (krew & kustomize), and also the Kyverno plugin; so, we don't have to RUN anything in the cluster, but we do have to install some things. They then take Kyverno for a spin, and it spits out a bunch of things it doesn't like, which you might want to remediate for security reasons. And, that wraps the article? They do tell us that Kyverno is usually run as an admission controller, where it figures out if your container complies as it spins it up. Missing is what to do about complaints -- either how to fix  them (tweak settings) or silence/ignore them -- if you are okay with a container violating best practices, you should be able to say "don't complain about this", but no mention of that in the article. It's a good toe-dip, but that is it.
BottomLine: Good walk-through of high-level test for your Kubernetes security
==
URL reference: https://blog.kubesimplify.com/implementing-kubernetes-network-policies-a-comprehensive-guide
DateReviewed: 2023-04-09
Description: Network policy is the way we allow pods in our Kubernetes cluster to talk to each other, and this article is going to take a look at that. They note that you need a network plugin that supports network policy for your configs to be effective, otherwise you are shouting into a void. They then lay down some terminology and explain how the basics work (default is allow all net traffic).  We then go through a sample YAML files, to understand what the various bits do. Our first visit is to a policy which is "deny all", which should be the basis for us from a security point of view. They then go through a couple scenarios with config files to show how things work. To finish up, it goes through some of the things you can't do with Network policies, like TLS or logging.
BottomLine: Good starting article for Network Policies
==
URL reference: https://medium.com/@walissonscd/rbac-in-kubernetes-creating-serviceaccounts-roles-and-rolebindings-79affd9b7baf
DateReviewed: 2023-04-11
Description: Starts right to the point - this is a tutorial to get acquainted with RBAC. They walk through creating a service account which we'll use to perform things, a role which has permissions and then creating a role binding to attach the role perms to the service account. They then set up both a deployment and a pipeline, to demonstrate how to use the permissions. Short, with tech details and delivers on the upfront promise.
BottomLine: A great tutorial walk through of RBAC on Kubernetes
==
URL reference: https://www.learnitguide.net/2023/04/understanding-kubernetes-security-and.html
DateReviewed: 2023-04-15
Description: This article talks about Kubernetes Security and Observability, and it starts pretty well -- Keep it up to date, secure the API, use the tools that help you be secure. Then we talk about observability, without really talking about what it is; we handwave metrics, logs, tracing and dashboards. We then move right along to improving security and observability, without much foundation. Dips into 4 tools to "improve", for about a paragrpah each. With a bit more tie-together and a bit more about how the tools help improve and why, this might be a decent piece.
BottomLine: Good as a list to start with but no meaningful insight
==
