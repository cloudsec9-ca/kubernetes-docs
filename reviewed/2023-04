
URL reference: https://itnext.io/kubernetes-security-standoff-6116a312fedd
DateReviewed: 2023-04-04
Description: This article start with an anecdotal story, where the author explains how by using AppArmor they had been able to mitigate a serious vulnerablity. Once we get into the meat, the example they use is a legacy app with no source code. We then go through a mini-tutorial on setting up AppArmor. AppArmor is a Linux security tool which uses profiles to allow and deny access. They use an interactive generator, which observes what is going on to build a profile. They explain how to set it up, including reviewing the proposed rules, and note you need it both in your containers AND installed on your nodes to get the most out of it. I have a couple sticking points -- one is that generators may not get ALL of your legitimate usage, so be careful -- and two, while this is one important tool, security is best done in layers, and there are other things you should be doing too.
BottomLine: Good article on how a Linux-level tool (AppArmor) can be leveraged to be a strong Container security tool.
==
URL reference: https://containerjournal.com/features/are-your-kubernetes-workloads-secure-unsettling-trends-in-latest-benchmark/
DateReviewed: 2023-04-05
Description: Unlike a few recent reviews, this one starts out a bit odd, by conflating cloud and Kubernetes -- as if the only cloud option IS Kubernetes. It then talks about a Fairwinds survey, but drops numbers from a CNCF report. Then, without pointing to evidence, it confidently states that K8s security is trendingin the wrong direction. A bit further on they state that fewer orgs are turning off unneeded services then in 2021, but don't cover why -- better understanding of what is and isn't secure, or more orgs using, or newer users leaving defaults -- it's not clear. We then go through writeable filesystems, privledged access and running as root, all ticking up. We then go through vulnerable images and glance at outdated Helm charts and images, both ticking up as well -- but we don't get a definition of "outdated". Our last is deprecated APIs, which also showed a change -- but is this the Kubernetes API, or other APIs? The article doesn't say. So, while the topics covered are good, the approach and explaination aren't there.
BottomLine: Good for top-level topics, but lacking in approach and insight
==
