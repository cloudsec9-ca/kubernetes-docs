
URL reference: https://thekubeguy.medium.com/kubernetes-security-best-practices-7f1515df4432
DateReviewed: 2023-11-01
Description: We start by understanding we should prioritize security as part of our Kubernetes journey - nice! The article is short but sweet - he takes a bunch of top-level topics, adds a bunch of good points and then delivers in quick succession. His top level includes RBAC, network policies, image scanning, PSP, API server access, updates and checking common threats. For each high level we visit one subtopic, but many have three or more. Great intro in a small package.
BottomLine: Small and high level but hard hitting intro to Kubernetes security
==
URL reference: https://dzone.com/articles/securing-kubernetes-dont-underestimate-the-risk-po?es_id=658baf04fe
DateReviewed: 2023-11-02
Description: We start with K8s being widely deployed and good, but they can store lots of senstitive info, so are targets, and config errors can be the way in. Now this article was written by an exploit team, and they recount what they found in probing and assessing various clusters. Conventional attacks include credentials, but can allow code injection (if perms allow it) and customer data access. The outline two main misconfigs - anon user with high privs and the kubectl proxy command. For both commands, they spend several paragraphs on what the issues are and how they can help attackers. They have a five point mitigation plan for these issues, which is just good general advice. Its a decent overview.
BottomLine: Decent high level walkthrough of config issues that can cause exposures on Kubernetes
==
URL reference: https://securityboulevard.com/2023/11/the-need-for-improved-kubernetes-security/
DateReviewed: 2023-11-03
Description: We start with K8s complex and security needed - the rub here is critical vuln discovered last week, which were with Nginx ingress. The vulns would allow secrets to be disclosed, code execution and even code injection. Oddly, they outline some good practices and then say they produce challenges - which is true but also huh? They conclude this bit with "more protection is needed". They claim that most security is network-layer oriented, which is selectively blind.  They advocate for something they call "behavioural baseline monitoring", which seems like they are looking for pattern variations. We then circle back to the net layer, where they mention microsegmentation. Oh, and encryption at rest (and in transit) is imporatant. Ah, and there is a pitch at the end. I like fresh takes on things, but this is a bit of a mish-mash; the lesson I drew was "think differrent in your security approach", which they didn't say anywhere.
BottomLine: High level and at times confused, it does make some decent points so may be worth a quick skim
==
URL reference: https://podman-desktop.io/blog/podman-desktop-release-1.5
DateReviewed: 2023-11-04
Description: Okay, so we rip the band-aid off here and start digging into new Podman features. (Podman is a K8s like OCI container manager). There are 7 major improvements, so let's skim them! They have a new onboarding feature, but from the blurb I'm not sure if this is "I want a new project" or "I'm new to Podman". There is a command palette, which seems cool and I think acts as a completer for CLI commands? There are little blurbs for the other features, and short videos that mostly correspond to the feature talked about (but not on the command palette one). So I've now come to realize the audience for this is current Podman users, because this is too little info for a non-Podman person to glean much from.
BottomLine: Interesting alternative to Kubernetes but the new release doc is focused on current users
==
URL reference: https://truefort.com/improved-kubernetes-security/
DateReviewed: 2023-11-05
Description: We start with the news, and recent issues with Nginx ingress, which is scary for K8s. So, apparently traditional approaches like immutable containers might not do it, and also network isolation can make legit comms harder. So, old is new again, and we need to look for patterns or trends from our workload usage to understand what is unusual. At this point, I'm getting a deja-vu feeling, and that is because this is an article I recently reviewed, but published on a different site. Still confused, of course.
BottomLine: Already reviewed but on a different site now
==
URL reference: https://gbhackers.com/kubernetes-vulnerabilities/
DateReviewed: 2023-11-06
Description: Kubernetes is great, and like any platform it has security vulns. Our article here will walk us through the top 5. First, we talk about what security is, so things like data protection, app availability and compliance. We then walk through the five - misconfig RBAC, Dashboard and API access, insecure images and registries, default perms and permissions and unpatched nodes. It outlines the issue, explains mitigation and gives a snip to be secure. Not super in depth, but a good starting point.
BottomLine: High level tour of Five Kubernetes vulnerabilities and mitigations 
==
URL reference: https://www.youtube.com/watch?v=RC7NeTh-cf8
DateReviewed: 2023-11-07
Description: We start with a comparison between K3s and RKE2 at a high level -- RKE is secure out of the box. This is going to be a walkthrough, so we start with how he spins it up; and he does talk a bit about what level of security it has and goes through the general approach. Now he goes through some of the config options and explains what they mean in good detail, and then he spins it off. The script he wrote does its thing, and when it completes he checks a few things and then fires up the GUI, to check a bit. Seems interesting enough to give it a try.
BottomLine: Alternative small Kubernetes install that is more secure out of the box with a walkthrough install
==
URL reference: https://thehackernews.com/2023/11/confidence-in-file-upload-security-is.html
DateReviewed: 2023-11-08
Description: We start with talking about infrastructure outpacing security, and one stat where 2% are confident in their security posture. They dive into cloud hosting, with a pretty chart with weird labels - 2/3rds of hosting is AWS, but also Azure, and 1/3 is GCP - huh? Containers are a popular destination. They talk about concerns, and another chart - file upload protections - apparently lots of concerns. So, while file uploads can be an attack vector, there is little on what specific threats might be there. I think their thesis is running lots of AV engines gets you better protection, which might be marginally true. We conclude with some flashy buzzwords and a product pitch. Overall its an interesting topic, but some of the assumptions are not great.
BottomLine: Interesting approach to file based security issues in the cloud
==
URL reference: https://www.securitynewspaper.com/2023/11/08/is-your-etcd-an-open-door-for-cyber-attacks-how-to-secure-your-kubernetes-clusters-nodes/
DateReviewed: 2023-11-09
Description: We start with K8s being the standard, but as always security. In this iteration, we're going to look at ETCD, the system that K8s uses to do configuration. We get a brief runthrough on control planes and nodes, to give background, before touching on Etcd as a key-value store. They do mention getting access to Etcd stores implies root access to the underlying node, so a lot of access; but you get all K8s stuff from that, too. They go through a laundry list of action that you can get, like persistence, changing times on pods (to make them appear longer running), creating hidden pods and so on. In each case, they explain the technique and provide a command line that can realize it. They then walk through a number of mitigations to restrict or eliminate issues, again with each having a few lines explaining what to do. While I think that the threat is tiny, it's always good to think things through and this article is a good starting point for that.
BottomLine: Good discussion of the small threat from Etcd compromises on Kubernetes
==
URL reference: https://cloudnativejourney.wordpress.com/2023/11/09/security-considerations-in-kubernetes/
DateReviewed: 2023-11-10
Description: Starts off lauding Kubernetes, but says we must consider security. Has a table of contents, so that is good. Has seven main topics, which it breaks into subtopics and even bullets out big points in some subtopics. While it stays fairly high level, it does hit most of the important stuff, including authentication and authorization, network, pod and cluster security, secrets, logging and upgrades. Nothing out of left field, but a solid if high level intro which is a good place to start.
BottomLine: Solid starting point for high level intro to Kubernetes security
==
URL reference: https://www.helpnetsecurity.com/2023/11/10/kubernetes-production-environments/
DateReviewed: 2023-11-11
Description: We start with Kubernetes being complex, and is made up of multiple clusters, with multiple kinds of infra and multiple distros in enterprise. Our article is a policy piece, examining K8s in the enterprise space. Surprisingly, more than half of the businesses they talked to had more than 10 K8s clusters, which seems like a lot. Unsurprisingly, there are lots of Ops issues, and disjointed enviornments means dev, staging and production are out of step. Automation is a key goal here, as they do too much stuff by hand. It feels like many enterprises are trying to rework bigger apps into containers, rather than rethink the way they are deploying things. While I'm not sure I agree with all of their thoughts, just exploring the enterprise mindset is quite interesting.
BottomLine: Interesting take on using Kubernetes in an enterprise setting
==
URL reference: https://akyriako.medium.com/build-an-ms-dos-games-emulator-on-kubernetes-146ba6f142d9
DateReviewed: 2023-11-11
Description: This is a bit of fun - we're going to setup a game in an emulater to be run in a users browser, with the help of Kubernetes. They are using js-dos to set stuff up, and to support that we need to craft some files which will be managed with Kubernetes. We are shown a bit of GO to support this, and then we go through a bit of text to explain what the Go bits do. They then walk through using a ConfigMap to expose a specific game to a user by Nginx/K8s. Now, to get the files to serve out for each game, we are walked through firing up an Init Container to rustle up the files when we start things up. We tie the files to a PVC, and then package it all as a Deployment. To top it off, we go through the creation of a controller, and then see an actual game to running.
BottomLine: Cool project using Kubernetes to play MS Dos games
==
URL reference: https://cloud.google.com/anthos-config-management/docs/tutorials/modern-cicd-gke-user-guide
DateReviewed: 2023-11-12
Description: So, this is a Google paper on doing CI/CD with GKE. It's end to end coverage of using CI/CD, and includes things like getting sponsors and advocates, how to set thing up, how it helps devs and your biz move forward. Copious amounts of diagrams and discussion text to tie things together. It's long and might take a couple sittings to digest, but it is written plainly to be used. Wortha skim at least, and a deeper read if you are using GKE.
BottomLine: Google paper about using CI/CD with GKE/Kubernetes that is worth at least a skim
==
URL reference: https://thenewstack.io/can-ebpf-keep-your-kubernetes-cluster-from-getting-hacked/
DateReviewed: 2023-11-13
Description: We start with eBPF being amazing, and it helping with Kubernetes a lot; but you need tools to leverage eBPF. They then go through a laundry list of things eBPF can do, but focus in on how it can help - better analysis, reducing false postives and reducing the risk of breaking things. So they talk a bit about false postives and their impact, which includes alert fatigue. We then wander into a discussion about an open ingress and how to secure/validate it. We then pivot to CO-RE, and the piece meanders on a bit. While I appreciate it getting me thinking about using eBPF, the piece seems to lack a point.
BottomLine: Article about using eBPF on Kubernetes that has decent links but lacks focus
==
URL reference: https://www.armosec.io/blog/gitops-for-kubernetes-security-and-compliance/
DateReviewed: 2023-11-14
Description: GitOps is a an approach to CI/CD, and in this article we're going to see if we can leverage this to improve security overall. We start with zero knowledge, and go through repos, CI, CD, and monitoring. Then we go through security benefits, which include an audit trail, gating, code scans, auto deployment and rollback, and drift detection. We then go through some issues we can face in the CI/CD flow, including malware, leaked secrets, and config issues among others. They then go through ways to address any of the issues. There is a small product plug for Armo, but honestly the article is excellent and the plug is low key.
BottomLine: High level overview of using GitOps to improve Kubernetes security
==
URL reference: https://blog.devops.dev/kubernetes-security-context-capabilities-explained-4fdc7d32de66
DateReviewed: 2023-11-15
Description: We start with a brief intro, telling us that sec context is derived from Linux capabilities throughout the system. We then dive right in with an example, where they show different container systems and compare their Linux capabilities, pointing out that one lacks the ability to ping (no NET_RAW). We then go hands on, where they demo the ping, then show dropping the sec capability and seeing ping not work. Simple but straightforward, a great read!
BottomLine: Walkthrough of Kubernetes security context - short but well done
==
URL reference: https://learnk8s.io/kubernetes-node-size
DateReviewed: 2023-11-16
Description: We'll be exploring if fewer bigger or more smaller nodes are better in our Kubernetes cluster. We have a table of contents, and diagrams, so I'm hopeful this will be good. They start with the idea that your cluster is really a virtual server with the sum of all the CPU/mem etc of all the nodes. Next they talk about how K8s works at the node level, and zero in on memory. They explain the key mem metrics, and how K8s determines how much memory to dedicate to workloads -- this is the evicition threshold. They work through an example, showing a "fits comfortably" deployment and then a "too small" layout. They then work through what happens if a node was to crash, to have you consider resilience. They then work through a variety fo scenarios and outcomes to give you an idea how things might work. The explainations are well illustrated and it gives you the tools to understand how you might want to build your nodes.
BottomLine: Recommended read about sizing your nodes in Kubernetex
==
URL reference: https://kubescape.io/blog/2023/09/19/introducing-kubescape-3/
DateReviewed: 2023-11-17
Description: We start with a product launch, which is a new version of Kubescape, 3.0 to be precise. They have a long point form list of the new features, which are actually kind of cool. They have a paragraph on history, and then do a deeper dive on some of the new features, with both YAML snips and GUI snapshots to help understand. They even do a short roadmap of what is next. An awesome walkthrough for a product launch
BottomLine: Launch announce and walkthrough of new features for Kubescape, a Kubernetes security scanner
==
URL reference: https://www.getambassador.io/blog/kubecon-2024-emerging-trends
DateReviewed: 2023-11-18
Description: This is a summary of what went on at KubeCon, so let's dive in. Our authors cover a bit of platform engineering, AI & ML, Cloud Native infra, Kubernetes expansion, cost management, webassembly, more security, and a few misc things on the horizon. Each area has a few paragraphs, with highlights and directions from the conference. Lots of participant pics, it gives you a real flavor of what goes on.
BottomLine: Decent summary or KubeConNA which happened recently.
==
URL reference: https://devtron.ai/
DateReviewed: 2023-11-19
Description: So there is a short blurb, but it has an intro video, which we'll look into. First we go through global config, and then do a tour of permissions. So, we're 2 mins in and we still have no clue what this is; I'd say a better approach would have been to do a 30 sec hands on and then start with these details. Now we go through a tour of Helm charts and how that works. Now we get to see the "single pane of glass" view. Just past 5 1/2 mins in, we finally get through a build setup. Okay, so I stopped here; this video is a chance to go through as many bells and whistles as possible. Some of the features might be compelling, but I have zero clue what this does (other then help as a CI/CD piece) and why I should use their product over another. Maybe all of this makes more sense if you have another similar platform? As a dev, I'm not sure why I'd want to use this.
BottomLine: Might be interesting but the video doesn't make the case.
==
URL reference: https://cloudnativejourney.wordpress.com/2023/11/20/telepresence-enhancing-kubernetes-development/
DateReviewed: 2023-11-20
Description: We start with waffling, but the intro tells us that Telepresence is a way to run local development in coordination with remote servers. So it works as a proxy between your local env and the remote cluster, allowing you to run items in your local debugger to observe issues. It then goes through a tour of the features, like what deployment modes can be used, how it can be used for debugging, and live iterative tests to observe changes. They go through a few more features and even some drawbacks before bringing things to a close.
BottomLine: Excellent intro to Telepresence, a debug tool allowing local devs to interact with remote Kubernetes clusters
==
