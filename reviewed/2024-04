URL reference: https://dev.to/cicube/how-to-use-kubectl-exec-command-3e4n
DateReviewed: 2024-04-01
Description: While containers are a great tool, sometimes we want to interact with the app or env in the container, to understand what is going on, because logs aren't always telling the whole story. Often being able to run a command or a shell helps, and Kubernetes does have that ability, which this article explores.  First they quickly explain what k8s exec is, and go through some of the top features, before showing the syntax usage. It's part of kubectl, and you have to supply the target pod name and the command you want to run. They do a bit of a walk through, so they create some pods and wait for them to come ready. First up they show the very useful interactive shell, where you can interact like being logged into the pod. Next, they show some one-off commands, which are run in the context of the pod to allow you to see what is going on. They run the date command, and then perplexingly an update command -- odd because best practice dictates your containers should be immutable. They then show getting the env and setting an env variable, as well as running as a specific user. A use I haven't seen before is forwarding a pod port to your local machine. They also show how to access a second container in the same pod. They then have a few paragraphs on access restrictions and ensuring things are done in a secure manner.
BottomLine: Good intro to Kubernetes exec and some of its capabilities
==
URL reference: https://blog.devgenius.io/mastering-nginx-deployment-on-kubernetes-e96005152d8a
DateReviewed: 2024-04-02
Description: We start with praise for K8s and then the author mentions how Nginx is often used as a web server on K8s. This article is going to go through a few ways to get that working. We start by actually invoking a specific image on a pod first, and then he shows how to use YAML to spin it up as well. I like this, as it shows both imperative and declaritive approaches to resource deployment. He then walks through the deprecated ReplicationController and ReplicaSet methods, to show ways to create multiple copies of a containers. He then walks through both a Deployment and a StatefulSet, with a very brief explanation of what they are and shows the YAML and command do run them. His last two are DaemonSets and Helm, again with walkthroughs. I find it's pretty good, although I wish he would have added a bit to the how and why to use different methods.
BottomLine: Walk through on various ways of running Nginx on Kubernetes
==
URL reference: https://overcast.blog/13-kubernetes-tricks-you-didnt-know-647de6364472
DateReviewed: 2024-04-03
Description: This article will reveal 13 interesting ways to get things done in Kubernetes. Each trick has a paragraph of explaination, an example usage, and a when to use and what to be careful of when using the trick. First up is a hook that signals apps to clean up when a graceful shutdown is initiated. Next up is automated secret rotation, which allows K8s to securely update things like passwords; caveat is your app has to actually ask K8s for the secret regularly. They look at ephemeral pods for debugging, which is a cool technique. Another trick is pod scaling based on a custom metric, rather than just CPU or memory. They mention Init containers for setup, which is a great tactic. They go into node affinity and taints and tolerations, which allow control over which nodes pods are or aren't scheduled to. They dive into Pod priority and preemption, which allows some pods to take precedence over other pods by evicting them if needed. They talk about ConfigMaps and secrets to control app behavior. A cool new trick is the debug pod -- where you copy your running pod to a new image, which has additional tools your production images don't need to include. They look into requests and limits to manage resources, extending Kubernetes with CRDs, and finally using the K8s API for automation and dynamic interaction. This is almost too much info, but it is concise, well presented and a great resource.
BottomLine: Thirteen awesome tricks to make your Kubernetes journey easier
==
URL reference: https://coruzant.com/tech/the-evolution-and-importance-of-saas-application-security/
DateReviewed: 2024-04-04
Description: So, SaaS or Software as a Service is something that is important, but apparently it, like Kubernetes, is not as secure as it should be, and this article will tackle that. We start with some odd framing tracing the origins back to the '60s, before leaping ahead to the 2000s. What's not made clear is if we are focused on SaaS from a provider or comsumer point of view. We go on to enumerate the key security features, which include Authentication and authorization, encryption, access controls, monitoring and compliance. After a paragraph outlining each feature, we're treated to anoter paragraph on how they help secure stuff. There is a pitch in the final paragraph, but I'm still wondering WHAT we are talking about. It's an interesting topic, but done I'd argue poorly here.
BottomLine: Decent topic of SaaS app security done with a poor treatment
==
