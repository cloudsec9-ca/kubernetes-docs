URL reference: https://securityboulevard.com/2025/06/linuxfest-northwest-chaos-testing-of-a-postgres-cluster-on-kubernetes/
DateReviewed: 2025-08-01
Description: The article is really a stub around a presentation at a conference of Chaos testing PostgreSQL on Kubernetes. So the outline is running dbs in prod, why run dbs on K8s, running PG on K8s, observability - what's going on, an finally breaking things on purpose. They talk a bit about strategy for DBs, then a bit about DBaaS ... pros and cons, and posture that K8s allows you to change the approach to DBs. It makes things lighter and easier to do. They show a diagram about building a PG cluster, which is easier to do with pods and K8s. They go through a replica failure, and what an "app" sees in comparison. They also look at things if K8s is in the mix.
BottomLine: Interesting discussion of how to use Postgres on Kubernetes
==
URL reference: https://www.nivelepsilon.com/2024/02/25/simplifying-kubernetes-how-distroless-images-change-the-game/
DateReviewed: 2025-08-02
Description: Our article today focuses on distroless images and how they help to simplify Kubernetes. We jump in with a discussion of containers and their backing images, explaining where we started and what this represents. We then dig into the benefits, which include better security, less overhead and size, and simpler maintenance. They have a good formula for using the new images - figure out what your dependencies are, select a base image that works with that, adjust your Dockerfile, and finally test the resulting images. They show us how this works with a multi-stage Dockerfile that sets everything out. They then go through, explaining some of the bits of the file in the main text. One thing they do say is that this approach may not work in all cases -- so see if it fits your use case. Good approach.
BottomLine: Interesting short paper on actually using Distroless for Kubernetes
==
URL reference: https://dev.to/shashankpalakurthi/getting-started-with-kyverno-kubernetes-policy-made-simple-4f89
DateReviewed: 2025-08-03
Description: Today we'll be digging into Kubernetes policy with Kyverno. We start with a paragraph on what is Kyverno, which is a policy admission controller. Next they dip into why do we need it, explaining that it helps build guardrails around what is allowed or not. We then get into the how, which is through K8s CRDs - custom resource definitions. We also dig a bit into how to config Kyverno, where they tell us about things like policy types, rules, and policy modes. There is a reporting mode called Audit, and Enforce mode which strictly enacts policies. They also touch on policyException, which is a way to avoid a policy for a certain reason. Lastly, they take us through PolicyReport -- which they point out is only helpful for Audit mode, because it lists non-compliant resources, where in enforcing mode the resources would never be created. Good read.
BottomLine: Good intro to Kyverno and security policies in Kubernetes
==
URL reference: https://www.portainer.io/blog/practical-no-nonsense-answers-to-reddits-top-docker-and-kubernetes-questions
DateReviewed: 2025-08-04
Description: This article is going to try and answer the top Docker and Kubernetes questions, so let's get started. We start with a bit of bookkeeping on where the questions were sourced from, and then dive right in. The format is that they state the question, and then respond in 2 or 3 paragraphs. First Q is about K8s complexity, and they urge an incremental approach. Q2 is a good one, on limits for CPU and memory; disappointingly, they only talk about how Portainer is a magic approach to this. This sadly echoes through the remaining questions, where the "answer" to everything is "Portainer does this with magic". I can respect explaining the challenge and traditional soln, and showing Portainer does it better, but that is not this. It's a miss from both the authors and the service to the community.
BottomLine: Good idea executed poorly - Kubernetes questions are all solved by Portainer - skip
==
URL reference: https://linuxsecurity.com/news/server-security/linux-patch-management
DateReviewed: 2025-08-05
Description: Our article today is on Linux Patch management. We start with a bit of general background on patching, then dive into the crux - what is linux patch management? They say it's a network security strategy, which I think is an odd framing, but do say it's about staying up to date. Next, they talk about the benefits, things like reducting cyberattack risk, improving performance and adding new functionality. They also tackle the downsides, with things like service disruption, compatibility issues and resource limitations. Once all done, they go through what you have to do to start, and give a good checklist of how to get started and what to do.
BottomLine: Good discussion on how patch mgmt can improve your security
==
URL reference: https://www.youtube.com/shorts/g-3MikhtaRU
DateReviewed: 2025-08-06
Description: This video is about Kubernetes in 60 seconds. They start by talking about containers and how all the parts get pulled together. They point out that the complexities are hidden, making devs lives easier. They talk a bit about how multiple containers are run through Kubernetes, and does nod to things like autoscaling.
BottomLine: Decent quick overview of Kubernetes in 60 seconds
==
URL reference: https://msdemo8.lll-ll.com/?i=4423448&li=27767012
DateReviewed: 2025-08-07
Description: Our article today talks about bringing your standard VM to a Kubernetes env. The solution is to use OpenShift according to our article, where they use a bit of the container approach along with a bit of the more traditional VM approach; the issue is that this is a bit of Fermat's last theorem, where they talk a bit about it in a short piece and don't give much more detail. Definately an interesting concept.
BottomLine: Short piece about integrating VMs and Containers with Kubernetes
==
URL reference: https://blueteamsec.net/2025/06/15/effective-incident-response-in-kubernetes-environments/
DateReviewed: 2025-08-08
Description: The article we'll be looking at today is about Kubernetes but from the perspective of a security responder -- we're looking at incident response. We start with a diagram of interactions, and I love diagrams. They do a bit of general background, then a short history on Kubernetes. They basically speedrun a glossary, giving you the names and short explainations of where they fit. We also get a chart of various namespaces. They then explain the workings, and we go through the various APIs/configs/pieces that do the backend work. Finally we get to the CLI, and they do a short runthrough on that. They then get into the part of doing an incident response - they go step by step, showing along the way what exactly to do. While not intended this way, this is a great intro to K8s in the beginning and then an awesome guide to troubleshooting. Recommended.
BottomLine: Very decent guide for a beginner on Kubernetes with an emphasis on security
==
