
URL reference: https://techblog.cisco.com/blog/cloud-native-security-faq
DateReviewed: 2023-05-02
Description: As a big title, you might expect big things. But, not in this article; it's not lots of questions, but more like a few high-level ones. It does a good job of explaining why cloud threats are different, why it's important, and why cloud threats are growing. It then ties it's boat to CNAPP, or Cloud Native application protection platform -- which it then describes as an all-in-one solution, but I think has lots of components and is likely an ecosystem. It does touch on OWASP top 10 and Open source software, as well as hawking a Cisco product. After all this, it then talks about different kinds of Cloud services, and thinks like GitOps. Now, it claims to be the ultimate FAQ, and while it does a decent job of covering the questions, I'd say it's a bit of a fail in comprehensiveness or depth.
BottomLine: Good overview and answers, but not ultimate as claimed
==
URL reference: https://www.cncf.io/blog/2022/09/06/the-2-minute-test-for-kubernetes-pod-security/
DateReviewed: 2023-05-02
Description: Okay, it's a 2 minutes test, how long could it actually take? So, it starts off strong, by explaining what Pod security is and why you need it, and what threats are there. It then has a small tutorial/walk through, installing Kyverno and setting it up to scan your cluster. It then uses a sample container image and runs a test, to see what violates the policies they have set. This is a good overview, and does a decent job.
BottomLine: Good overview and bit of hands on for Pod Security
==
URL reference: https://medium.com/@chingchen0131/a-beginners-guide-to-kubernetes-e0f1c2866d36
DateReviewed: 2023-05-03
Description: Okay, so it has a neat graphic. And then, NADA. It's a table of contents for other posts. And hey, they might be good, but THERE IS NO CONTEXT FOR THEM HERE. Ugh!
BottomLine: Just a pointer to other posts
==
URL reference: https://medium.com/@rhthmchoudhary123_10210/kubernetes-storage-and-security-982eb50e27cd
DateReviewed: 2023-05-07
Description: Starts weak, with no overview or intro, but smack into content. It does a good job of talking about the varieties of long-lived volumes, explaining persistent volumes, volume claims and storage classes. It then dips a toe in security, explaining RBAC, Cluster roles, secrets, configmaps, network policies and TLS. It provides illustrations with YAML stanzas in many cases, to get a feel. It's a higher-level overview, but not a tutorial.
BottomLine: Actually a really decent high-level overview or storage and security in Kubernetes
==
URL reference: https://www.kubenatives.com/p/kubernetes-security-best-practices
DateReviewed: 2023-05-07
Description: Good intro where it goes over what we'll cover. I'm not sure I love the way they cover things, as it seems we cover the same areas a few times, but it's a good high-level overview. Talk about RBAC, namespaces, Network Policies, Securing the API, and audit logging. Brings up keeing Kubernetes up to date, and also touches on securing the images used in containers. Quick touches on Resource quotas, Pod Security policies and using Monitoring and alerts. Doesn't bother with a wrap up, but covers a lot of ground for a high level overview.
BottomLine: High level good but brief introduction to a variety of Kubernetes Security topics
==
URL reference: https://yuminlee2.medium.com/kubernetes-security-contexts-e54624e29d52
DateReviewed: 2023-05-07
Description: This is a half tutorial and half walkthrough, and honestly it's not too bad. I like how it goes through security at different levels (pod, container) and explains what you can and can't do. It shows the YAML you need to achieve things, and explains the defaults and why you might want to override them.
BottomLine: Good basic hands-on with pod/container security in Kubernetes
==
URL reference: https://www.scmagazine.com/perspective/devops/as-adoption-skyrockets-securing-kubernetes-becomes-critical
DateReviewed: 2023-05-07
Description: Okay, so this article starts on an odd foundation for me, which is one of how Kubernetes makes deploying easier. It's true, but the one thing it handwaves over is state -- you can scale easily as long as your app doesn't have global or cross-session state, which it doesn't mention. It then states it is hard to find Kubernetes security experts, but then it says you should hire a 3rd party, but those seem a bit at odds. Then it talks about people collaborating and getting on to the same page. So, overall, I feel this tries to be a conversation starter, but doesn't actual even scratch the surface on actual Kubernetes security.
BottomLine: Not a great conversation starting piece
==
URL reference: https://securityboulevard.com/2022/09/kubernetes-security-cost-avoidance-and-policy-go-hand-in-hand/
DateReviewed: 2023-05-08
Description: Starting from a "Kubernetes is the major threat" stance, it talks about how configs and DevOps are important to security. They then lay in how you can reduce costs in a cloud enviroment, but it's important to involve engineers, because things don't happen without them. They then mention making both of these goald tier on objectives as part of your strategy. We're now into K8s governance, and they mention that point-in-time audits are useful, but often you have up to 3 teams that have different goals in their missions. It wraps up with a bullet list of different considerations. While everything here seems factual, there isn't a strategic plan as much as an aspirational set of things to be done; it almost feels like they didn't want to be too specific, but end up with a laundry list and not an outline. I think a "one approach to this would be .." with a single worked example would have helped.
BottomLine: Decent base approach to integrating cost & security but fails to motivate well how to enact it
==
URL reference: https://amini.eu/posts/shell_kube/
DateReviewed: 2023-05-09
Description: Good intro to start. It goes through why you might want to use shell scripting for security; talks a bit about prereqs and then we start into scripting. It then walks us through an example shell script which ensures that an image is the latest version. Note - while it mentions you need to know scripting, they could have done a bit of a break out what the script does, for beginners or those unfamiliar. It does go through it at a high level, though. It then goes through a few more examples in both bash and powershell. It's a good place to put a toe in.
BottomLine: Good early intro to using shell scripting for security in Kubernetes
==
URL reference: https://goteleport.com/blog/secure-amazon-eks-access/
DateReviewed: 2023-05-09
Description: This has a solid intro, and is actually the first of two parts, so hopefully it is good. They'll be using Teleport to help secure Kubernetes/EKS stuff. They then do the initial Teleport setup, and have some good diagrams to help understanding. They then generate some TP access tokens and run some Helm charts to get the TP agent installed. We are then walked through how to access the clusters, and shown that it automatically adds some bits to a config file -- neat! While this is a neat walk-through, I'm left wondering what Teleport is helping out with. Maybe it's doing identity managemnet? But it's not clear from the article what the use case is.
BottomLine: Great tutorial on Teleport and setting it up with EKS
==
URL reference: https://kubernetes.io/docs/concepts/security/api-server-bypass-risks/
DateReviewed: 2023-05-09
Description: From the CNCF, this talks about the Kubernetes API and what can be done to bypass built-in security and how to mitigate. First we talk about static pods, which are not managed by k8s API directly - so you have to know what is in the spot where StaticPods are launched from. You have to know what static pods can and can't do, and while static pods are subject to an admission controller, failure to admit only means the server isn't API registered -- it still runs. Next up is kubelet API, which allows cluster worker node management. If you have kubelet API access, there is no logging or admission control peformed, so you probably want some mitigation. By default, access is allowed anonymously, but it can be configured to use webhook/certificates to verify the requestor. Next is the etcd API, which only needs to be accessed by the K8s API and backups. Access is managed by cert, but any cert trusted by etcd has full access to all data, and there is no logging or admission controls. Access will grant admin rights; and even with RBAC mitigation access allows workload creation. Finally we look a tthe container runtime socket. Each node provided this, to allow containers to be managed. Obviously with access to this socket, you can control or even launch containers. All of these vectors have a detailed list of mitigations, which allow you to lock down and understand your cluster security.
BottomLine: Must read to know the API attack surface for Kubernetes
==
URL reference: https://www.suse.com/c/rancher_blog/demystifying-container-orchestration-a-beginners-guide/
DateReviewed: 2023-05-10
Description: A good strong start, explaining why you might need container orchestration. It then explains what orchestration is, and how it works at a high level. We then travel through the whys and benefits of using orchestration, and then get specific with Kubernetes as a container orchestration system. Next, they talk a bit about multi-cloud, then do a brief Docker vs. Kubernetes comparison. There is a comparison of general and specific implemnentations of both Docker and Kubernetes, a touch on AWS EKS and Hashi Nomad. We then go through some considerations, and we have a brief (ad) blurb for Rancher before concluding. Overall pretty well done.
BottomLine: Great high level overview to the space.
==
URL reference: https://securityboulevard.com/2023/02/kubernetes-basics-tutorial-ensure-containers-do-not-run-as-root/
DateReviewed: 2023-05-10
Description: Okay, we reach way back and in the into explain what a container is, and how all the pieces fit together. Then we talk about avoiding running containers as root, and we'll be using Polaris to do some checking on images. Next, we do a high level walk through and find the Polaris report turned into a dashboard, which allows us to spot (among other things) which containers are running as root. They walk through remediating, which shows how to add "runAsNonRoot: True" to the right spot in YAML (w vid), which it explains only adds the API restriction, and not actually changes pod behaviour. They then explain fixups in Docker et al which will enable the behaviour we're after. Finally, we're told about an admission controller option to further restrict pods running as root.
BottomLine: Very good intro to containers upfront, and decent high level walkthrough of not running containers as root
==
URL reference: https://linuxsecurity.expert/tools/k8guard/
DateReviewed: 2023-05-11
Description: This is a light listing of various tools, including this one. It gives a cursory explaination of the tool. It apparently looks for violations of some kind and takes actions. While giving the tool a green 74 (/100?), the latest release is 2018, so 5 years old, so their rating is not worth much.
BottomLine: Not sure about the tool or even the website for this one.
==
URL reference: https://www.suse.com/c/rancher_blog/rancher-desktop-1-0-0-has-arrived/
DateReviewed: 2023-05-12
Description: It's an intial announcment, so it's not a deep dive. They have a screenshot, explain it's available on Windows/Mac/Linux, and talk a bit about it. They talk about experience of using it locally, mention it's based on k3s, and that you can choose containerd or dockerd as your engine. They then talk a bit about the roadmap. I've heard lots, but haven't used Rancher, so I can't give an informed opinion. The announcement is good -- not too much hype, focus on what it does.
BottomLine: Initial announcement note
==
URL reference: https://www.suse.com/c/rancher_blog/deciphering-common-misconceptions-about-security-across-kubernetes/
DateReviewed: 2023-05-13
Description: This is a short question and answer blurb, which is a good format. I think the actual answers are a bit aggresively pessamistic, but it gives you a good lay of the land. Kubernetes is a framework for running your containers, and out of the box it's more about getting going then being fully secure. So, while a professional reading this would be able to understand, I feel a non-tech exec would be unduly alarmed at what it says.
BottomLine: Good format but a bit too pessimistic a tone for a good high-level security treatment
==
URL reference: https://www.airplane.dev/blog/debugging-kubernetes-nodes-in-not-ready-state
DateReviewed: 2023-05-13
Description: Okay, this is a very decent troubleshooting walk-through. It lays out the ground conditions, and takes you through a whole bunch of reasons your node might be "NotReady". It covers other states, and goes through things like resources overused, network config issue, and then it heads through some examples with commands. This is a good guide and a good approach to troubleshooting in general
BottomLine: Good on the NotReady state, but decent over approach to troubleshooting
==
URL reference: https://www.redhat.com/en/blog/applying-devsecops-practices-kubernetes-security-analysis-and-remediation
DateReviewed: 2023-05-14
Description: While the second part of a series, this article stands well on its own. It talks about understanding what containers are running in them, where to do things (in the build process), and how to approach services (as immutable and interchangable cogs). Talks also about runtime restrictions and options. Overall a good but high level look at the topic.
BottomLine: Decent high level overview of DevSecOps
==
URL reference: https://buoyant.io/mtls-guide
DateReviewed: 2023-05-15
Description: mTLS is "mutual" TLS, or both-sides using a certificate. It talks a bit about what it is and how it works, so we get an overview. Next it explains why Web TLS is different and why we might want mTLS between services. Then it talks about certificate management - what it is, how it works, and why you need it. We then are led through a mini-tutorial on how to set up mTLS in a mesh. Actually a decent walk through.
BottomLine: Good primer and starting point for mTLS deployment
==
