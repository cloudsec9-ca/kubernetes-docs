URL reference: https://medium.com/spacelift/top-13-kubernetes-alternatives-for-containers-b46cb40727c9
DateReviewed: 2025-06-01
Description: Our article today goes into 13 Kubernetes alternatives you might consider using. Each alternative has specific use cases, and they as a group have a wide variety of interesting things they do. The format follows the same basics for each one - name of package, a small blurb, the website, key features and a when to use blurb. I'll list all the alternatives, which are each given the same treatment - OpenShift, Nomad, Mesos, Swarm, ECS, Tanzu, Netlify, Cloud run, Incus, CloudFoundry, Docker, Rancher and Azure Container instances (ACI). They range from single devel. focus to enterprise, from container runners to full general clusters. I think the idea is to see if your use case can be better served with a different approach, and there are a diversity of that here.
BottomLine: Great survey of alternatives to Kubernetes for deployments
==
URL reference: https://learn.microsoft.com/en-us/azure/defender-for-cloud/defender-for-containers-introduction
DateReviewed: 2025-06-02
Description: The article for today is an introduction to Defender for Containers written by Microsoft. It's a high level document, with an exec summary upfront and then a bit of a deeper dive further in. The four core areas it addresses are security posture management, vuln assessment, run time threat protection and Deployment and monitoring. Each gets a para upfront, then 3 to 4 paras in the deeper dive. For those on Azure, it might be a good option.
BottomLine: Intro to Defender for Containers by Microsoft
==
URL reference: https://www.portainer.io/solutions/enterprise
DateReviewed: 2025-06-03
Description: Today's article is a bit of a pitch, selling us on using Portainer as a service. The idea here is that you want to use containers, but you don't want to learn how to run or manage the container, but just focus on your own code. They cover all the important aspects, like security, scaling, and management. They provide tech experts to do the container management and grunt work. I'd say this is perfect for startups or dev-only teams looking to stay out of managing the orchestration of clusters. It does have a niche.
BottomLine: Good pitch on using Portainer to run managed containers
==
URL reference: https://towardsdatascience.com/kubernetes-understanding-and-utilizing-probes-effectively/
DateReviewed: 2025-06-04
Description: Our article today is a short one on using probes the right way. Starts with a bit of background about what probes are and do, then talks about each one - startup, liveness and readiness. Each section has a para on what role the probe has, a sample config, and key takeaways to optimize each. It has some tips at the end and wraps with other configs that might be interesting.
BottomLine: Good short intro to the various Kubernetes probes
==
URL reference: https://arxiv.org/abs/2504.11126
DateReviewed: 2025-06-05
Description: This is an abstract fronting a paper on security hardening of the Kubernetes attack surface through a tool called KubeFence. The thesis here is that even with RBAC, it is possible to have misconfigs and vulns. So they use KubeFence to do filtering of API requests in a more fine grained way. Seems like a promising approach.
BottomLine: Short intro to KubeFence - a Kubernetes tool to improve API security
==
URL reference: https://kubenomicon.com/Pentesting%20Kubernetes.html
DateReviewed: 2025-06-06
Description: Today we dive into the 4 layers of Kubernetes security in this article. We start with a quick intro, and then dive into the 4 layers - Code, Container, Cluster and Cloud. They talk briefly about three offensive tools, some helpful commands, and then do a brief stint on enumeration. It's mostly a primer for security people needing to bang on K8s clusters.
BottomLine: Decent quick intro to Kubernetes for security people
==
URL reference: https://istio.io/latest/blog/2025/ztunnel-security-assessment/
DateReviewed: 2025-06-07
Description: Our article today delves into an audit of the new mesh option in Istio called ztunnel. Written in Rust, it runs as a secure overlay in cooperation with the existing Envoy proxy. The audit result was good, with no vulns found and remarking that the code is already good. They did sugest some improvements, like beter dependency management and test coverage, as well as hardening HTTP header parsing.
BottomLine: Interesting look at the Security audit for ztunnel from Istio
==
URL reference: https://medium.com/h7w/scaling-your-kubernetes-deployments-vertically-a-cool-in-depth-guide-94fe834ea3d8
DateReviewed: 2025-06-08
Description: This article tackles scaling Kubernetes deployments vertically, or moving them to a bigger machine. After a bit of background, they git into the meat with why requests and limits matter, talking about the needs. They then talk a bit about some tools, paticularly Kubecost and OpenCost, and the pros/cons of each. They then look at Vertical Pod Autoscalar (VPA), walking through install, defining an object in it, viewing the recommendations from it. The then look at centralizing metrics and things like visualizing and alerting, before touching on automatic updates.
BottomLine: Good examination of limits and using recommendations on your Kubernetes cluster
==
URL reference: https://www.wiz.io/academy/kubernetes-rbac-best-practices
DateReviewed: 2025-06-09
Description: Okay, I'll admit this is more than I thought at first glance - the standard Kubernetes best practices for RBAC. I expected something short, and no, that isn't this. Starts with a point form "takeaways", then dives in with what is RBAC. Next is why it matters, before getting to setting up RBAC, a small tutorial. Not a bad walkthrough. Next we get into the best practices, and each one is named and gets a para; things like least priv and regular review of perms, with 7 covered. We then get 4 "bonus advanced" practices, pitfalls, and discussion of RBACs critical role, before some real world examples and a short product pitch.
BottomLine: Great discussion and setup walkthrough of Kubernetes RBAC
==
URL reference: https://www.refontelearning.com/blog/top-backend-skills-to-learn-in-2025
DateReviewed: 2025-06-10
Description: The article today is an exploration of skills to learn in 2025. We start with some background, basically talking about how tech is changing and we have to keep up, before getting into the topics. Each area gets 2 to 5 paras, and it's fairly well motivated. We start with Polyglot programming and Framework mastery, talking about using multiple langs and a variety of libs and frameworks. Next up is Cloud Native and serverless computing skills, followed by microservices arch and DevOps integration, next is Data mgmt and concludes with API evolution and Security first mindset and performance optimization. Actually well covered and talked through
BottomLine: Interesting list of skills to tackle for 2025
==
URL reference: https://www.portainer.io/blog/governance-and-policy-for-kubernetes-balancing-control-with-developer-freedom
DateReviewed: 2025-06-11
Description: This article dives into governance, and tries to explain the role it plays and why it's important. We start with a bit of background, including how traditional governance works, and how Kubernetes changes things. They argue that this has to be done early while building clusters, and not afterwards. The emphasis is on guardrails and not controls preventing things from happening. They argue that there is a balance to be struck. To wrap, they do a bit of talking about Internal developor platforms, and how they can help in this.
BottomLine: Good thinkpiece on Governance as applied to Kubernetes
==
URL reference: https://thenewstack.io/toolhive-simplifies-mcp-server-orchestration-with-kubernetes/
DateReviewed: 2025-06-12
Description: Today's article is on ToolHive, a tool to help manage MCP servers you may be running. We start with some background, talking about what MCP is and some of the challenges of working with it. They talk a bit about things like dependencies needed for MCPs, and issues with things like logins. The advice is to manage them uniformly. They argue that K8s is well suited to this job, using things like RBAC and other policies. ToolHive connects the strengths of K8s with the flexibility of MCPs. Using GO, it's been around for a bit, and it uses StatefulSets to manage the apps.
BottomLine: Good overview of ToolHive to manage MCP servers on Kubernetes
==
URL reference: https://sysdig.com/blog/sysdig-2025-cloud-native-security-and-usage-report/
DateReviewed: 2025-06-13
Description: Our article today talks about Kubernetes security, and argues that 2025 will be a breakthrough year. We start with some background, and then jump in. They let us know that AI adoption skyrocketed, and now it is more secure. More, as in a climb from 15 to 36% using, and less exposed to the Internet, down 38%. In acount access, good things too - especially in service accounts, where configs are better and IDs are being managed more securely. The also touch on defense pieces, saying these take time, and reiterating that secure clouds are a product of secure containers, their building blocks. 
BottomLine: Good coverage of a few Kubernetes security concerns for 2025
==
URL reference: https://benhouston3d.com/blog/why-i-left-kubernetes-for-google-cloud-run
DateReviewed: 2025-06-14
Description: This article will talk about NOT using Kubernetes. We start with background, notably starting a company that offered a 3D editor. They started on bare metal, making the switch to K8s after a couple years. They switched away due to 3 main factors - cost overruns, difficulty managing large jobs volumes, and complexity overhead. They explain each in decent detail. They then talk about what they switched to, a bit on thoughts about K8s, and then some other details. I like it as an honest reckoning on K8s.
BottomLine: Decent piece on why you might not want to run on Kubernetes
==
URL reference: https://krishnag.ceo/blog/owasp-kubernetes-top-ten-k10-outdated-and-vulnerable-kubernetes-components/
DateReviewed: 2025-06-15
Description: Our article today deals with one of the OWASP top 10 - outdated and vulnerable Kubernetes components. We start, as ususal, with a bit of background and stage setting, before diving in. They define what components are, and how they might be outdated. They then talk about the risks from running out of date stuff. We are then taken on a tour of TEN incidents, with an explaination of what happened, to whom, when, and the lessons to be learned. They use these to build a discussion, including why timely security is important and what the best practices are. Very well done piece.
BottomLine: Good explaination focued on securing outdated/vulnerable Kubernetes components
==
URL reference: https://krishnag.ceo/blog/owasp-kubernetes-top-ten-k09-misconfigured-cluster-components/
DateReviewed: 2025-06-16
Description: Today's article continues yesterdays OWASP theme, this time looking at Misconfigured cluster components. We start with background, and then they do a quick review of K8s cluster components. They then start to dig in on the security side, starting with Control plane components, and examining 5 of them. Each has a bit of an explaination, and then a security consideration. Next they look at Worker node components, examinng 3 of them. They then look at what they call additional components, which are used as resource or access managers; same idea applied here. We do a short best practices, and then dive into common Kubernetes misconfigs, and they go through 5 of them. They start with a short intro, explain the risks, give examples of misconfig, and show mitigation strategies. They then highlight 8 real-world incidents where misconfigs played a role, before addin more best practices and wrapping up.
BottomLine: Good discussion of misconfigured Kubernetes components
==
