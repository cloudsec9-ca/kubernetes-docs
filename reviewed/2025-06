URL reference: https://medium.com/spacelift/top-13-kubernetes-alternatives-for-containers-b46cb40727c9
DateReviewed: 2025-06-01
Description: Our article today goes into 13 Kubernetes alternatives you might consider using. Each alternative has specific use cases, and they as a group have a wide variety of interesting things they do. The format follows the same basics for each one - name of package, a small blurb, the website, key features and a when to use blurb. I'll list all the alternatives, which are each given the same treatment - OpenShift, Nomad, Mesos, Swarm, ECS, Tanzu, Netlify, Cloud run, Incus, CloudFoundry, Docker, Rancher and Azure Container instances (ACI). They range from single devel. focus to enterprise, from container runners to full general clusters. I think the idea is to see if your use case can be better served with a different approach, and there are a diversity of that here.
BottomLine: Great survey of alternatives to Kubernetes for deployments
==
URL reference: https://learn.microsoft.com/en-us/azure/defender-for-cloud/defender-for-containers-introduction
DateReviewed: 2025-06-02
Description: The article for today is an introduction to Defender for Containers written by Microsoft. It's a high level document, with an exec summary upfront and then a bit of a deeper dive further in. The four core areas it addresses are security posture management, vuln assessment, run time threat protection and Deployment and monitoring. Each gets a para upfront, then 3 to 4 paras in the deeper dive. For those on Azure, it might be a good option.
BottomLine: Intro to Defender for Containers by Microsoft
==
URL reference: https://www.portainer.io/solutions/enterprise
DateReviewed: 2025-06-03
Description: Today's article is a bit of a pitch, selling us on using Portainer as a service. The idea here is that you want to use containers, but you don't want to learn how to run or manage the container, but just focus on your own code. They cover all the important aspects, like security, scaling, and management. They provide tech experts to do the container management and grunt work. I'd say this is perfect for startups or dev-only teams looking to stay out of managing the orchestration of clusters. It does have a niche.
BottomLine: Good pitch on using Portainer to run managed containers
==
URL reference: https://towardsdatascience.com/kubernetes-understanding-and-utilizing-probes-effectively/
DateReviewed: 2025-06-04
Description: Our article today is a short one on using probes the right way. Starts with a bit of background about what probes are and do, then talks about each one - startup, liveness and readiness. Each section has a para on what role the probe has, a sample config, and key takeaways to optimize each. It has some tips at the end and wraps with other configs that might be interesting.
BottomLine: Good short intro to the various Kubernetes probes
==
URL reference: https://arxiv.org/abs/2504.11126
DateReviewed: 2025-06-05
Description: This is an abstract fronting a paper on security hardening of the Kubernetes attack surface through a tool called KubeFence. The thesis here is that even with RBAC, it is possible to have misconfigs and vulns. So they use KubeFence to do filtering of API requests in a more fine grained way. Seems like a promising approach.
BottomLine: Short intro to KubeFence - a Kubernetes tool to improve API security
==
URL reference: https://kubenomicon.com/Pentesting%20Kubernetes.html
DateReviewed: 2025-06-06
Description: Today we dive into the 4 layers of Kubernetes security in this article. We start with a quick intro, and then dive into the 4 layers - Code, Container, Cluster and Cloud. They talk briefly about three offensive tools, some helpful commands, and then do a brief stint on enumeration. It's mostly a primer for security people needing to bang on K8s clusters.
BottomLine: Decent quick intro to Kubernetes for security people
==
URL reference: https://istio.io/latest/blog/2025/ztunnel-security-assessment/
DateReviewed: 2025-06-07
Description: Our article today delves into an audit of the new mesh option in Istio called ztunnel. Written in Rust, it runs as a secure overlay in cooperation with the existing Envoy proxy. The audit result was good, with no vulns found and remarking that the code is already good. They did sugest some improvements, like beter dependency management and test coverage, as well as hardening HTTP header parsing.
BottomLine: Interesting look at the Security audit for ztunnel from Istio
==
URL reference: https://medium.com/h7w/scaling-your-kubernetes-deployments-vertically-a-cool-in-depth-guide-94fe834ea3d8
DateReviewed: 2025-06-08
Description: This article tackles scaling Kubernetes deployments vertically, or moving them to a bigger machine. After a bit of background, they git into the meat with why requests and limits matter, talking about the needs. They then talk a bit about some tools, paticularly Kubecost and OpenCost, and the pros/cons of each. They then look at Vertical Pod Autoscalar (VPA), walking through install, defining an object in it, viewing the recommendations from it. The then look at centralizing metrics and things like visualizing and alerting, before touching on automatic updates.
BottomLine: Good examination of limits and using recommendations on your Kubernetes cluster
==
