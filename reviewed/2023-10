
URL reference: https://keentolearn.medium.com/kubernetes-error-codes-what-they-mean-and-how-to-fix-them-e63656927af3
DateReviewed: 2023-10-01
Description: I've read a few of these error code articles, and they can be good; and this one starts with a "what K8s is". Actually, it only covers 6 errors, but they are often encountered, and it's well done. The author gives us a bit of info about what the error is, possible causes and a snip to get more concrete info. It's a good resource.
BottomLine: Goes through six common Kubernetes errors and their fixes
==
URL reference: https://blog.sonatype.com/npm-packages-caught-exfiltrating-kubernetes-config-ssh-keys
DateReviewed: 2023-10-02
Description: We start with a quick grounding that this sec team has found something. They used an automatic detector to spot the issue, then had analysts dig in to figure out what was going on. After explaining their process a bit, they find a JS component that finds configs and SSH keys and sends them to a malware domain. They do note that while there are 14 affected NPM modules, each module has only been downloaded less than 200 times, meaning this isn't too widespread. Still, something to know and check for.
BottomLine: A walkthrough of detection and understanding of an NPM software supply chain attack
==
URL reference: https://vijilan.com/blog/navigating-the-complexities-of-logscale-deployment-in-kubernetes-with-vijilan/
DateReviewed: 2023-10-03
Description: We start of with a nod to logs being a key part of security. Now, there is a pitch here, but just a handwave to that at first. We are run through a quick and very high level series of challenges with logging, which are good considerations. We then transition to a high level walkthrough of how their tool, Vijilan, makes logging (and LogScale in this case) easier. It stays very high level throughout, but it's a good toe-dip into logging and managing logging.
BottomLine: Decent first contact to Kubernetes logging and log management approachesk
==
URL reference: https://medium.com/@kevinlutzer9/raspberry-pi-kubernetes-cluster-with-k3s-and-metallb-1dab9ef475bb
DateReviewed: 2023-10-04
Description: Using K3s to run your own apps is cool. Our author talks a bit about how running K8s works in the cloud, and how things are a bit different on bare metal using Pis. We go through a short setup section, where they go through the prep parts. They talk about the hardware bits needed, and how to build your cluster from parts. We then are taken through setting up the primary node, followed by networking and a low-level automation tool. We then install and configure K3s, and watch our node(s) come up. We then configure "metallb", which allows us to use Load balance services on our bare metal machines. We are then treated to a demo of using Nginx to test our cluster.
BottomLine: An interesting approach to running Kubernetes on Raspberry Pis
==
URL reference: https://itnext.io/securing-kubernetes-applications-with-crowdsec-intrusion-detection-system-8eb2f93d3c9f
DateReviewed: 2023-10-05
Description: We start with the typical K8s is a security target. The author is going to use CrowdSec, so the article is built around that. Starts with some pre-reqs, then sets up a sample app to run on your cluster. Then it goes through the install process for CrowdSec. They then do a demo of an attack, show what they look like in the tool, and then show how to mitigate such an attack. Overall, a decent walkthrough.
BottomLine: Walks through a Kubernetes intrusion detection app with a sample attack
==
URL reference: https://github.com/openclarity/kubeclarity
DateReviewed: 2023-10-06
Description: This is a repo, so we start with a basic intro, which is that KubeClarity detects and manages SBOM and vulns. They have a why/solution section, which is great for motivation. They include a feature list, supported 3rd parties, and an arch diagram. They walk through a Helm install and a simple local demo. They do some hands-on walkthroughs, and then show how some of the integrations work. They have a limitations and a roadmap, to see the future.
BottomLine: Interesting open source SBOM component with vuln scanning
==
URL reference: https://www.solo.io/blog/buyers-guide-kubernetes-security/
DateReviewed: 2023-10-07
Description: We start with cloud giving us new possibilities, and new risks. We then dive into risks, highlighting both internal and external issues. But somehow traditions security blows this up? They then move to solutions, which they seem to cover 5 products, and how they do in the wild. They do cover a number of best practices, which I'll give them credit for. But I said "seem to" earlier because the entry here is just a puff piece to get you to download their guide, and I'm not a fan of that approach. Their guide may be great, but I'm here to learn something, not be punted to another document. I might review the guide another time.
BottomLine: Mainly a promo for a guide -- but does chat about risks and best practices a bit
==
URL reference: https://rafay.co/the-kubernetes-current/8-advantages-of-gitops-kubernetes-deployment
DateReviewed: 2023-10-08
Description: Ah, we begin with - K8s is the defacto way to deploy, but can be cumbersome. So, using version control we can "GitOps" our pipeline, with git as the place where everything is stored. They go through this as 8 points, starting with version control and auditing. Mostly good points about git and being able to know what is where (auditing) and being able to roll back (version history), but "knowing who did what" does require git to be set up properly. Second point is simplified collab, which means digital collab that is captured; but some things require outside collab. Third is IaC principles, and I do agree in principle, there are bits that might elude being checked in. Fourth is easy CD, and that is a strong feature of git. Fifth is declarative Config mgmt, and I like this trend. Sixth is DR and HA, and, maybe? Having configs are critical for spinning up replacement bits, but what about data? Seventh is self-serve for app teams, and while it sounds interesting, I'd like to see an example to understand it better. Last is security and compliance, and while I see some wins with git here, there are some gaps, which this piece doesn't address, like secrets. Overall a good high-level starting spot, though.
BottomLine: Good high level case for using GitOps with Kubernetes
==
URL reference: https://www.redhat.com/en/blog/enhancing-kubernetes-security
DateReviewed: 2023-10-09
Description: Starts like many, K8s, defacto, must be more secure. So, this article will focus on a compliance operator for OpenShift to do this. The piece actually outlines a solid policy, while of course hawking their own product, that does this. They covern Vuln mgmt, runtime thread detection, net segmentation, policy enforcment, IR, and compliance and reporting. In addition, they hawk the earlier mentioned compliance operator with 7 key points. One pet peeve is that they define only some of the acronyms they use. Worth a read if you might consider their offering, but it's similar to other non-biased guides I've reviewed.
BottomLine: Decent advice but with a definite RedHat product slant, so wouldn't be a first-read
==
