URL reference: https://www.forty8fiftylabs.com/blog/automate-to-dominate-boosting-your-kubernetes-clusters/
DateReviewed: 2025-05-01
Description: Our article today talks about how to enhance your automation approach to improve managability for Kubernetes. After some background, we dive into a what is Kubernetes section, before moving on to the role of automation in Kubernetes. They break this down broadly into Infra automation, Business process auto, and finally Robotic process auto. We then go through a section where they laud the benefits of automation.
BottomLine: Decent article at a high level on Kubernetes automation
==
URL reference: https://itnext.io/securing-kubernetes-workloads-a-practical-approach-to-signed-and-encrypted-container-images-ii-7ec72ba95d14
DateReviewed: 2025-05-02
Description: This article talks about using encrypted containers to enhance Kubernetes security. This is part two, and in part one the author talked about using signed and encrypted containers with podman. We dive in and examine Confidential containers, and look into the K8s Trusted Execution Environment (TEE). It features things like trasparent memory encryption of secrets and remote attestation to ensure things are secure before allowing access. The entire Pod is subject to TEE, and they note there are helper processes to set up and control the pod - which makes the kernel, command line and root FS all trusted, along with other pieces. There is a link to some other TEE related info, to fill in gaps. We get a diagram (I love diagrams), and they do acknowledge there are a lot of moving parts with a bit of complexity to make this all work. They refer to the system as Confidential Virtual Machine (CVM), which runs inside the TEE. There are some other services that support the various bits to be considered secure, and these are composed of local agents and remote services that validate things. They also point out that the cluster admin is "untrusted", in that they might not have auth to read secrets -- which means special considerations are in order. They have some YAML snips and do a walkthrough of how to set this up, but it's a bit opaque to me. Basically the gist is that there are decryption keys ONLY available inside of the TEE, and those are then used to decrypt the secrets. It's interesting.
BottomLine: Intro into encrypted containers on Kubernetes with a walkthrough
==
URL reference: https://medium.com/google-cloud/back-to-basics-simplifying-kubernetes-concepts-part-1-f7145fce12ec
DateReviewed: 2025-05-03
Description: This article talks about simplifying the approach to learning Kubernetes, to get going a bit more quickly. The author is going to help us understand by giving us his learning including trial and error to get things working. He starts with Webhooks, paticularly how mutatinig and validating admission hooks work. They go through an example, with code and YAML, to explain how it works hands-on. We finish up this one with usage of the different hooks. Next is API aggregation layer vs CRDs. They explain that the aggregation layer is a way to expand the K8s API, and can do things like add various auths to the cluster. We're taken through a YAML snip on setting it up. On the CRD side, he has another article he links to for it, cleaning up with a chart of where you would use each one. They also cover Ingress vs Gateway API and StatefulSets vs Deployments vs DaemonSets. Actually a good intro to some more complex K8s topics.
BottomLine: Strong simple introduction to advanced Kubernetes topics
==
