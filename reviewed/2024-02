
URL reference: https://magnintel.com.au/cloud-security-best-practices/
DateReviewed: 2024-02-01
Description: This piece positions itself as a Cloud sec best practices for small biz; I have some thoughts on this, but let's dig into the article first. They say they want to dive into risks, and give that all of one sentence. So on to best practices! They have 10 best practices, and use a formula of "what it is, how it helps, implementation tips" on all practices. Covered includes Data encryption, access controls & identity mgmt, security audits, MFA, Incident response planning, data backups, vendor security assessment, employee training, secure config and finally legal and compliance regulations. They then list 5 ways using best practices saves money. Now, the covered topics are decent and fine intros, and the saving money is nice. My problem with the piece is that it is aimed at small biz, and where would small biz have money for audits and incident response? This feels more aimed at mid-sized biz, or maybe in AU small biz is bigger?
BottomLine: Okay intro but weirdly aimed at small biz for Cloud security
==
URL reference: https://medium.com/@vishy.nitj/understanding-mutual-ssl-authentication-85efb2b050f4
DateReviewed: 2024-02-02
Description: So here, we're looking into mutual auth for SSL, or mTLS. Now, the setup is a bit weird, as it refers to a certain website, but okay. They then go on to show you the OpenSSL commands, without really explaining what OpenSSL is or what they do (they create keys, then a cert request, then sign the certs). They then use the certs to create Kubernetes secrets. We then get YAML to deploy the certs, which is cool, and to access them. Finally we do a test with Curl to validate the keys. While this is scriptable, I did just review a mTLS setup that does the Cert process for you. But this is a good local test alternative.
BottomLine: Shows you how to set up mTLS for Kubernetes on the CLI
==
URL reference: https://medium.com/@angelomarchaidez/docker-flask-kubernetes-building-a-lottery-application-with-python-8d38af40a3d4
DateReviewed: 2024-02-03
Description: This is about building a lotto app with Flask, and a way to work with containers. It's a simple lotto guesser app, that shows you the likelyhood of your numbers winning. They go through the UI, and explain how things will work. Then, they give the Python code which will run the backend, and then explain what it does. They then show us the html templates for data entry and results, which Python will use on the web side. Now that it works, we're going to Dockerize it so we can create a container out of it. We grab a Python base image, make some tweaks and build an image of the Flask app. We then go through the process to push to Docker hub. Now they go through the process of using this image, in this case by a YAML file to create a Kubernetes deployment, and then goes through the K8s CLI command to get it running.
BottomLine: A good basic walk through of deploying a Python app to a container
==
URL reference: https://medium.com/@SaiDevaPro/exploring-advanced-concepts-in-kubernetes-unlocking-its-deepest-potential-d92b79094594
DateReviewed: 2024-02-04
Description: Apparently, we're going to wield K8s to it's fullest potential, so let's go. We start with CRDs and Operators, and they explain for a para each what they are. Moving on we look at Advanced networking like service mesh, which K8s enables but they don't actually explain. Next up is Persistent storage, where they talk about various mechanisms. There are three more topics covered, but each of them is about a paragraph long. They include Resource mgmt and autoscaling, Observability and monitoring, and Security and compliance. All are great topics, but I'd say this piece fails to live up to it's potential, with a scratching the surface coverage of all topics.
BottomLine: Good topic list but poor in-depth coverage, this piece disappoints
==
URL reference: https://medium.com/@seifeddinerajhi/most-common-mistakes-to-avoid-when-using-kubernetes-anti-patterns-%EF%B8%8F-f4d37586528d
DateReviewed: 2024-02-05
Description: We start with Kubernetes is powerful, but it's easy to make a config mistake. So this article will work to help you avoid them! So, there are ELEVEN areas of concern they tackle, and all of them are fairly good. And they even come with a bunch of paragraphs going through each topic, with diagrams where approporiate. Just a few of the areas they cover include resource limits, health ckechs, privs of containers. and overuse of LoadBalancer. Overall, a well done piece.
BottomLine: Very good piece detailing common config mistakes in Kubernetes and how to avoid them
==
URL reference: https://securityboulevard.com/2024/02/kubernetes-security-best-practices-definitive-guide-for-security-professionals/
DateReviewed: 2024-02-06
Description: Kubernetes uptake increase, it's security becomes more critical, so in this article we'll look at K8s security practices. We start with a short overview of K8s, and then get to what is Kubernetes security. So, K8s security isn't only the cluster, but also the infrastructure that it is deployed on. They argue that one bad container can be equal to an entire compromise of the cluster, which is a bit of scare mongering in my opinion. We then jump into a chat about the four C's, which is decent, and then they go into detail, explaining what thing are and how they relate to each other. While still high level, they do dig down into concepts and try to build understanding. There is one new concept to these best practices pieces -- the idea of shifting left, or doing security earlier in the dev process. It's a long and actually good intro, despite a bit of fear mongering early on. I'd say it's a good intro look at Kubernetes security.
BottomLine: Solid high-level Kuberentes security intro, which does try to go deeper into understanding the various areas
==
